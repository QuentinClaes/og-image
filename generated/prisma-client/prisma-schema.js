module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateCategory {
  count: Int!
}

type AggregateContract {
  count: Int!
}

type AggregateCustomer {
  count: Int!
}

type AggregateNewsletter {
  count: Int!
}

type AggregatePriceCategory {
  count: Int!
}

type AggregateProvider {
  count: Int!
}

type AggregateReview {
  count: Int!
}

type AggregateSocialMedia {
  count: Int!
}

type AggregateSubCategory {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Category {
  id: Int!
  contract(where: ContractWhereInput, orderBy: ContractOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Contract!]
  createdAt: DateTime
  description: String
  name: String!
  nameFr: String
  nameNl: String
  photo: String
  provider(where: ProviderWhereInput, orderBy: ProviderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Provider!]
  subcategory: SubCategory
  updatedAt: DateTime
}

type CategoryConnection {
  pageInfo: PageInfo!
  edges: [CategoryEdge]!
  aggregate: AggregateCategory!
}

input CategoryCreateInput {
  contract: ContractCreateManyWithoutCategoryInput
  description: String
  name: String!
  nameFr: String
  nameNl: String
  photo: String
  provider: ProviderCreateManyWithoutCategoryInput
  subcategory: SubCategoryCreateOneWithoutCategoryInput
}

input CategoryCreateManyWithoutProviderInput {
  create: [CategoryCreateWithoutProviderInput!]
  connect: [CategoryWhereUniqueInput!]
}

input CategoryCreateManyWithoutSubcategoryInput {
  create: [CategoryCreateWithoutSubcategoryInput!]
  connect: [CategoryWhereUniqueInput!]
}

input CategoryCreateOneWithoutContractInput {
  create: CategoryCreateWithoutContractInput
  connect: CategoryWhereUniqueInput
}

input CategoryCreateWithoutContractInput {
  description: String
  name: String!
  nameFr: String
  nameNl: String
  photo: String
  provider: ProviderCreateManyWithoutCategoryInput
  subcategory: SubCategoryCreateOneWithoutCategoryInput
}

input CategoryCreateWithoutProviderInput {
  contract: ContractCreateManyWithoutCategoryInput
  description: String
  name: String!
  nameFr: String
  nameNl: String
  photo: String
  subcategory: SubCategoryCreateOneWithoutCategoryInput
}

input CategoryCreateWithoutSubcategoryInput {
  contract: ContractCreateManyWithoutCategoryInput
  description: String
  name: String!
  nameFr: String
  nameNl: String
  photo: String
  provider: ProviderCreateManyWithoutCategoryInput
}

type CategoryEdge {
  node: Category!
  cursor: String!
}

enum CategoryOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  name_ASC
  name_DESC
  nameFr_ASC
  nameFr_DESC
  nameNl_ASC
  nameNl_DESC
  photo_ASC
  photo_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CategoryPreviousValues {
  id: Int!
  createdAt: DateTime
  description: String
  name: String!
  nameFr: String
  nameNl: String
  photo: String
  updatedAt: DateTime
}

input CategoryScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  nameFr: String
  nameFr_not: String
  nameFr_in: [String!]
  nameFr_not_in: [String!]
  nameFr_lt: String
  nameFr_lte: String
  nameFr_gt: String
  nameFr_gte: String
  nameFr_contains: String
  nameFr_not_contains: String
  nameFr_starts_with: String
  nameFr_not_starts_with: String
  nameFr_ends_with: String
  nameFr_not_ends_with: String
  nameNl: String
  nameNl_not: String
  nameNl_in: [String!]
  nameNl_not_in: [String!]
  nameNl_lt: String
  nameNl_lte: String
  nameNl_gt: String
  nameNl_gte: String
  nameNl_contains: String
  nameNl_not_contains: String
  nameNl_starts_with: String
  nameNl_not_starts_with: String
  nameNl_ends_with: String
  nameNl_not_ends_with: String
  photo: String
  photo_not: String
  photo_in: [String!]
  photo_not_in: [String!]
  photo_lt: String
  photo_lte: String
  photo_gt: String
  photo_gte: String
  photo_contains: String
  photo_not_contains: String
  photo_starts_with: String
  photo_not_starts_with: String
  photo_ends_with: String
  photo_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [CategoryScalarWhereInput!]
  OR: [CategoryScalarWhereInput!]
  NOT: [CategoryScalarWhereInput!]
}

type CategorySubscriptionPayload {
  mutation: MutationType!
  node: Category
  updatedFields: [String!]
  previousValues: CategoryPreviousValues
}

input CategorySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CategoryWhereInput
  AND: [CategorySubscriptionWhereInput!]
  OR: [CategorySubscriptionWhereInput!]
  NOT: [CategorySubscriptionWhereInput!]
}

input CategoryUpdateInput {
  contract: ContractUpdateManyWithoutCategoryInput
  description: String
  name: String
  nameFr: String
  nameNl: String
  photo: String
  provider: ProviderUpdateManyWithoutCategoryInput
  subcategory: SubCategoryUpdateOneWithoutCategoryInput
}

input CategoryUpdateManyDataInput {
  description: String
  name: String
  nameFr: String
  nameNl: String
  photo: String
}

input CategoryUpdateManyMutationInput {
  description: String
  name: String
  nameFr: String
  nameNl: String
  photo: String
}

input CategoryUpdateManyWithoutProviderInput {
  create: [CategoryCreateWithoutProviderInput!]
  delete: [CategoryWhereUniqueInput!]
  connect: [CategoryWhereUniqueInput!]
  set: [CategoryWhereUniqueInput!]
  disconnect: [CategoryWhereUniqueInput!]
  update: [CategoryUpdateWithWhereUniqueWithoutProviderInput!]
  upsert: [CategoryUpsertWithWhereUniqueWithoutProviderInput!]
  deleteMany: [CategoryScalarWhereInput!]
  updateMany: [CategoryUpdateManyWithWhereNestedInput!]
}

input CategoryUpdateManyWithoutSubcategoryInput {
  create: [CategoryCreateWithoutSubcategoryInput!]
  delete: [CategoryWhereUniqueInput!]
  connect: [CategoryWhereUniqueInput!]
  set: [CategoryWhereUniqueInput!]
  disconnect: [CategoryWhereUniqueInput!]
  update: [CategoryUpdateWithWhereUniqueWithoutSubcategoryInput!]
  upsert: [CategoryUpsertWithWhereUniqueWithoutSubcategoryInput!]
  deleteMany: [CategoryScalarWhereInput!]
  updateMany: [CategoryUpdateManyWithWhereNestedInput!]
}

input CategoryUpdateManyWithWhereNestedInput {
  where: CategoryScalarWhereInput!
  data: CategoryUpdateManyDataInput!
}

input CategoryUpdateOneWithoutContractInput {
  create: CategoryCreateWithoutContractInput
  update: CategoryUpdateWithoutContractDataInput
  upsert: CategoryUpsertWithoutContractInput
  delete: Boolean
  disconnect: Boolean
  connect: CategoryWhereUniqueInput
}

input CategoryUpdateWithoutContractDataInput {
  description: String
  name: String
  nameFr: String
  nameNl: String
  photo: String
  provider: ProviderUpdateManyWithoutCategoryInput
  subcategory: SubCategoryUpdateOneWithoutCategoryInput
}

input CategoryUpdateWithoutProviderDataInput {
  contract: ContractUpdateManyWithoutCategoryInput
  description: String
  name: String
  nameFr: String
  nameNl: String
  photo: String
  subcategory: SubCategoryUpdateOneWithoutCategoryInput
}

input CategoryUpdateWithoutSubcategoryDataInput {
  contract: ContractUpdateManyWithoutCategoryInput
  description: String
  name: String
  nameFr: String
  nameNl: String
  photo: String
  provider: ProviderUpdateManyWithoutCategoryInput
}

input CategoryUpdateWithWhereUniqueWithoutProviderInput {
  where: CategoryWhereUniqueInput!
  data: CategoryUpdateWithoutProviderDataInput!
}

input CategoryUpdateWithWhereUniqueWithoutSubcategoryInput {
  where: CategoryWhereUniqueInput!
  data: CategoryUpdateWithoutSubcategoryDataInput!
}

input CategoryUpsertWithoutContractInput {
  update: CategoryUpdateWithoutContractDataInput!
  create: CategoryCreateWithoutContractInput!
}

input CategoryUpsertWithWhereUniqueWithoutProviderInput {
  where: CategoryWhereUniqueInput!
  update: CategoryUpdateWithoutProviderDataInput!
  create: CategoryCreateWithoutProviderInput!
}

input CategoryUpsertWithWhereUniqueWithoutSubcategoryInput {
  where: CategoryWhereUniqueInput!
  update: CategoryUpdateWithoutSubcategoryDataInput!
  create: CategoryCreateWithoutSubcategoryInput!
}

input CategoryWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  contract_every: ContractWhereInput
  contract_some: ContractWhereInput
  contract_none: ContractWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  nameFr: String
  nameFr_not: String
  nameFr_in: [String!]
  nameFr_not_in: [String!]
  nameFr_lt: String
  nameFr_lte: String
  nameFr_gt: String
  nameFr_gte: String
  nameFr_contains: String
  nameFr_not_contains: String
  nameFr_starts_with: String
  nameFr_not_starts_with: String
  nameFr_ends_with: String
  nameFr_not_ends_with: String
  nameNl: String
  nameNl_not: String
  nameNl_in: [String!]
  nameNl_not_in: [String!]
  nameNl_lt: String
  nameNl_lte: String
  nameNl_gt: String
  nameNl_gte: String
  nameNl_contains: String
  nameNl_not_contains: String
  nameNl_starts_with: String
  nameNl_not_starts_with: String
  nameNl_ends_with: String
  nameNl_not_ends_with: String
  photo: String
  photo_not: String
  photo_in: [String!]
  photo_not_in: [String!]
  photo_lt: String
  photo_lte: String
  photo_gt: String
  photo_gte: String
  photo_contains: String
  photo_not_contains: String
  photo_starts_with: String
  photo_not_starts_with: String
  photo_ends_with: String
  photo_not_ends_with: String
  provider_every: ProviderWhereInput
  provider_some: ProviderWhereInput
  provider_none: ProviderWhereInput
  subcategory: SubCategoryWhereInput
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  NOT: [CategoryWhereInput!]
}

input CategoryWhereUniqueInput {
  id: Int
}

type Contract {
  id: Int!
  accountManagerEmail: String
  accountManagerGSM: String
  accountManagerName: String
  accountManagerPhone: String
  category: Category
  clientNumber: String
  contractAutoReconduct: Boolean
  contractBudget: Float
  contractEndingAlert: Boolean
  contractEndingAlertTime: Int
  contractID: String!
  contractNumber: String
  contractPreavis: Int
  contractStart: DateTime
  contractTime: Int
  contractType: String
  customer: Customer
  provider: Provider
  selectionID: String
}

type ContractConnection {
  pageInfo: PageInfo!
  edges: [ContractEdge]!
  aggregate: AggregateContract!
}

input ContractCreateInput {
  accountManagerEmail: String
  accountManagerGSM: String
  accountManagerName: String
  accountManagerPhone: String
  category: CategoryCreateOneWithoutContractInput
  clientNumber: String
  contractAutoReconduct: Boolean
  contractBudget: Float
  contractEndingAlert: Boolean
  contractEndingAlertTime: Int
  contractID: String!
  contractNumber: String
  contractPreavis: Int
  contractStart: DateTime
  contractTime: Int
  contractType: String
  customer: CustomerCreateOneWithoutContractInput
  provider: ProviderCreateOneWithoutContractInput
  selectionID: String
}

input ContractCreateManyWithoutCategoryInput {
  create: [ContractCreateWithoutCategoryInput!]
  connect: [ContractWhereUniqueInput!]
}

input ContractCreateManyWithoutCustomerInput {
  create: [ContractCreateWithoutCustomerInput!]
  connect: [ContractWhereUniqueInput!]
}

input ContractCreateManyWithoutProviderInput {
  create: [ContractCreateWithoutProviderInput!]
  connect: [ContractWhereUniqueInput!]
}

input ContractCreateWithoutCategoryInput {
  accountManagerEmail: String
  accountManagerGSM: String
  accountManagerName: String
  accountManagerPhone: String
  clientNumber: String
  contractAutoReconduct: Boolean
  contractBudget: Float
  contractEndingAlert: Boolean
  contractEndingAlertTime: Int
  contractID: String!
  contractNumber: String
  contractPreavis: Int
  contractStart: DateTime
  contractTime: Int
  contractType: String
  customer: CustomerCreateOneWithoutContractInput
  provider: ProviderCreateOneWithoutContractInput
  selectionID: String
}

input ContractCreateWithoutCustomerInput {
  accountManagerEmail: String
  accountManagerGSM: String
  accountManagerName: String
  accountManagerPhone: String
  category: CategoryCreateOneWithoutContractInput
  clientNumber: String
  contractAutoReconduct: Boolean
  contractBudget: Float
  contractEndingAlert: Boolean
  contractEndingAlertTime: Int
  contractID: String!
  contractNumber: String
  contractPreavis: Int
  contractStart: DateTime
  contractTime: Int
  contractType: String
  provider: ProviderCreateOneWithoutContractInput
  selectionID: String
}

input ContractCreateWithoutProviderInput {
  accountManagerEmail: String
  accountManagerGSM: String
  accountManagerName: String
  accountManagerPhone: String
  category: CategoryCreateOneWithoutContractInput
  clientNumber: String
  contractAutoReconduct: Boolean
  contractBudget: Float
  contractEndingAlert: Boolean
  contractEndingAlertTime: Int
  contractID: String!
  contractNumber: String
  contractPreavis: Int
  contractStart: DateTime
  contractTime: Int
  contractType: String
  customer: CustomerCreateOneWithoutContractInput
  selectionID: String
}

type ContractEdge {
  node: Contract!
  cursor: String!
}

enum ContractOrderByInput {
  id_ASC
  id_DESC
  accountManagerEmail_ASC
  accountManagerEmail_DESC
  accountManagerGSM_ASC
  accountManagerGSM_DESC
  accountManagerName_ASC
  accountManagerName_DESC
  accountManagerPhone_ASC
  accountManagerPhone_DESC
  clientNumber_ASC
  clientNumber_DESC
  contractAutoReconduct_ASC
  contractAutoReconduct_DESC
  contractBudget_ASC
  contractBudget_DESC
  contractEndingAlert_ASC
  contractEndingAlert_DESC
  contractEndingAlertTime_ASC
  contractEndingAlertTime_DESC
  contractID_ASC
  contractID_DESC
  contractNumber_ASC
  contractNumber_DESC
  contractPreavis_ASC
  contractPreavis_DESC
  contractStart_ASC
  contractStart_DESC
  contractTime_ASC
  contractTime_DESC
  contractType_ASC
  contractType_DESC
  selectionID_ASC
  selectionID_DESC
}

type ContractPreviousValues {
  id: Int!
  accountManagerEmail: String
  accountManagerGSM: String
  accountManagerName: String
  accountManagerPhone: String
  clientNumber: String
  contractAutoReconduct: Boolean
  contractBudget: Float
  contractEndingAlert: Boolean
  contractEndingAlertTime: Int
  contractID: String!
  contractNumber: String
  contractPreavis: Int
  contractStart: DateTime
  contractTime: Int
  contractType: String
  selectionID: String
}

input ContractScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  accountManagerEmail: String
  accountManagerEmail_not: String
  accountManagerEmail_in: [String!]
  accountManagerEmail_not_in: [String!]
  accountManagerEmail_lt: String
  accountManagerEmail_lte: String
  accountManagerEmail_gt: String
  accountManagerEmail_gte: String
  accountManagerEmail_contains: String
  accountManagerEmail_not_contains: String
  accountManagerEmail_starts_with: String
  accountManagerEmail_not_starts_with: String
  accountManagerEmail_ends_with: String
  accountManagerEmail_not_ends_with: String
  accountManagerGSM: String
  accountManagerGSM_not: String
  accountManagerGSM_in: [String!]
  accountManagerGSM_not_in: [String!]
  accountManagerGSM_lt: String
  accountManagerGSM_lte: String
  accountManagerGSM_gt: String
  accountManagerGSM_gte: String
  accountManagerGSM_contains: String
  accountManagerGSM_not_contains: String
  accountManagerGSM_starts_with: String
  accountManagerGSM_not_starts_with: String
  accountManagerGSM_ends_with: String
  accountManagerGSM_not_ends_with: String
  accountManagerName: String
  accountManagerName_not: String
  accountManagerName_in: [String!]
  accountManagerName_not_in: [String!]
  accountManagerName_lt: String
  accountManagerName_lte: String
  accountManagerName_gt: String
  accountManagerName_gte: String
  accountManagerName_contains: String
  accountManagerName_not_contains: String
  accountManagerName_starts_with: String
  accountManagerName_not_starts_with: String
  accountManagerName_ends_with: String
  accountManagerName_not_ends_with: String
  accountManagerPhone: String
  accountManagerPhone_not: String
  accountManagerPhone_in: [String!]
  accountManagerPhone_not_in: [String!]
  accountManagerPhone_lt: String
  accountManagerPhone_lte: String
  accountManagerPhone_gt: String
  accountManagerPhone_gte: String
  accountManagerPhone_contains: String
  accountManagerPhone_not_contains: String
  accountManagerPhone_starts_with: String
  accountManagerPhone_not_starts_with: String
  accountManagerPhone_ends_with: String
  accountManagerPhone_not_ends_with: String
  clientNumber: String
  clientNumber_not: String
  clientNumber_in: [String!]
  clientNumber_not_in: [String!]
  clientNumber_lt: String
  clientNumber_lte: String
  clientNumber_gt: String
  clientNumber_gte: String
  clientNumber_contains: String
  clientNumber_not_contains: String
  clientNumber_starts_with: String
  clientNumber_not_starts_with: String
  clientNumber_ends_with: String
  clientNumber_not_ends_with: String
  contractAutoReconduct: Boolean
  contractAutoReconduct_not: Boolean
  contractBudget: Float
  contractBudget_not: Float
  contractBudget_in: [Float!]
  contractBudget_not_in: [Float!]
  contractBudget_lt: Float
  contractBudget_lte: Float
  contractBudget_gt: Float
  contractBudget_gte: Float
  contractEndingAlert: Boolean
  contractEndingAlert_not: Boolean
  contractEndingAlertTime: Int
  contractEndingAlertTime_not: Int
  contractEndingAlertTime_in: [Int!]
  contractEndingAlertTime_not_in: [Int!]
  contractEndingAlertTime_lt: Int
  contractEndingAlertTime_lte: Int
  contractEndingAlertTime_gt: Int
  contractEndingAlertTime_gte: Int
  contractID: String
  contractID_not: String
  contractID_in: [String!]
  contractID_not_in: [String!]
  contractID_lt: String
  contractID_lte: String
  contractID_gt: String
  contractID_gte: String
  contractID_contains: String
  contractID_not_contains: String
  contractID_starts_with: String
  contractID_not_starts_with: String
  contractID_ends_with: String
  contractID_not_ends_with: String
  contractNumber: String
  contractNumber_not: String
  contractNumber_in: [String!]
  contractNumber_not_in: [String!]
  contractNumber_lt: String
  contractNumber_lte: String
  contractNumber_gt: String
  contractNumber_gte: String
  contractNumber_contains: String
  contractNumber_not_contains: String
  contractNumber_starts_with: String
  contractNumber_not_starts_with: String
  contractNumber_ends_with: String
  contractNumber_not_ends_with: String
  contractPreavis: Int
  contractPreavis_not: Int
  contractPreavis_in: [Int!]
  contractPreavis_not_in: [Int!]
  contractPreavis_lt: Int
  contractPreavis_lte: Int
  contractPreavis_gt: Int
  contractPreavis_gte: Int
  contractStart: DateTime
  contractStart_not: DateTime
  contractStart_in: [DateTime!]
  contractStart_not_in: [DateTime!]
  contractStart_lt: DateTime
  contractStart_lte: DateTime
  contractStart_gt: DateTime
  contractStart_gte: DateTime
  contractTime: Int
  contractTime_not: Int
  contractTime_in: [Int!]
  contractTime_not_in: [Int!]
  contractTime_lt: Int
  contractTime_lte: Int
  contractTime_gt: Int
  contractTime_gte: Int
  contractType: String
  contractType_not: String
  contractType_in: [String!]
  contractType_not_in: [String!]
  contractType_lt: String
  contractType_lte: String
  contractType_gt: String
  contractType_gte: String
  contractType_contains: String
  contractType_not_contains: String
  contractType_starts_with: String
  contractType_not_starts_with: String
  contractType_ends_with: String
  contractType_not_ends_with: String
  selectionID: String
  selectionID_not: String
  selectionID_in: [String!]
  selectionID_not_in: [String!]
  selectionID_lt: String
  selectionID_lte: String
  selectionID_gt: String
  selectionID_gte: String
  selectionID_contains: String
  selectionID_not_contains: String
  selectionID_starts_with: String
  selectionID_not_starts_with: String
  selectionID_ends_with: String
  selectionID_not_ends_with: String
  AND: [ContractScalarWhereInput!]
  OR: [ContractScalarWhereInput!]
  NOT: [ContractScalarWhereInput!]
}

type ContractSubscriptionPayload {
  mutation: MutationType!
  node: Contract
  updatedFields: [String!]
  previousValues: ContractPreviousValues
}

input ContractSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ContractWhereInput
  AND: [ContractSubscriptionWhereInput!]
  OR: [ContractSubscriptionWhereInput!]
  NOT: [ContractSubscriptionWhereInput!]
}

input ContractUpdateInput {
  accountManagerEmail: String
  accountManagerGSM: String
  accountManagerName: String
  accountManagerPhone: String
  category: CategoryUpdateOneWithoutContractInput
  clientNumber: String
  contractAutoReconduct: Boolean
  contractBudget: Float
  contractEndingAlert: Boolean
  contractEndingAlertTime: Int
  contractID: String
  contractNumber: String
  contractPreavis: Int
  contractStart: DateTime
  contractTime: Int
  contractType: String
  customer: CustomerUpdateOneWithoutContractInput
  provider: ProviderUpdateOneWithoutContractInput
  selectionID: String
}

input ContractUpdateManyDataInput {
  accountManagerEmail: String
  accountManagerGSM: String
  accountManagerName: String
  accountManagerPhone: String
  clientNumber: String
  contractAutoReconduct: Boolean
  contractBudget: Float
  contractEndingAlert: Boolean
  contractEndingAlertTime: Int
  contractID: String
  contractNumber: String
  contractPreavis: Int
  contractStart: DateTime
  contractTime: Int
  contractType: String
  selectionID: String
}

input ContractUpdateManyMutationInput {
  accountManagerEmail: String
  accountManagerGSM: String
  accountManagerName: String
  accountManagerPhone: String
  clientNumber: String
  contractAutoReconduct: Boolean
  contractBudget: Float
  contractEndingAlert: Boolean
  contractEndingAlertTime: Int
  contractID: String
  contractNumber: String
  contractPreavis: Int
  contractStart: DateTime
  contractTime: Int
  contractType: String
  selectionID: String
}

input ContractUpdateManyWithoutCategoryInput {
  create: [ContractCreateWithoutCategoryInput!]
  delete: [ContractWhereUniqueInput!]
  connect: [ContractWhereUniqueInput!]
  set: [ContractWhereUniqueInput!]
  disconnect: [ContractWhereUniqueInput!]
  update: [ContractUpdateWithWhereUniqueWithoutCategoryInput!]
  upsert: [ContractUpsertWithWhereUniqueWithoutCategoryInput!]
  deleteMany: [ContractScalarWhereInput!]
  updateMany: [ContractUpdateManyWithWhereNestedInput!]
}

input ContractUpdateManyWithoutCustomerInput {
  create: [ContractCreateWithoutCustomerInput!]
  delete: [ContractWhereUniqueInput!]
  connect: [ContractWhereUniqueInput!]
  set: [ContractWhereUniqueInput!]
  disconnect: [ContractWhereUniqueInput!]
  update: [ContractUpdateWithWhereUniqueWithoutCustomerInput!]
  upsert: [ContractUpsertWithWhereUniqueWithoutCustomerInput!]
  deleteMany: [ContractScalarWhereInput!]
  updateMany: [ContractUpdateManyWithWhereNestedInput!]
}

input ContractUpdateManyWithoutProviderInput {
  create: [ContractCreateWithoutProviderInput!]
  delete: [ContractWhereUniqueInput!]
  connect: [ContractWhereUniqueInput!]
  set: [ContractWhereUniqueInput!]
  disconnect: [ContractWhereUniqueInput!]
  update: [ContractUpdateWithWhereUniqueWithoutProviderInput!]
  upsert: [ContractUpsertWithWhereUniqueWithoutProviderInput!]
  deleteMany: [ContractScalarWhereInput!]
  updateMany: [ContractUpdateManyWithWhereNestedInput!]
}

input ContractUpdateManyWithWhereNestedInput {
  where: ContractScalarWhereInput!
  data: ContractUpdateManyDataInput!
}

input ContractUpdateWithoutCategoryDataInput {
  accountManagerEmail: String
  accountManagerGSM: String
  accountManagerName: String
  accountManagerPhone: String
  clientNumber: String
  contractAutoReconduct: Boolean
  contractBudget: Float
  contractEndingAlert: Boolean
  contractEndingAlertTime: Int
  contractID: String
  contractNumber: String
  contractPreavis: Int
  contractStart: DateTime
  contractTime: Int
  contractType: String
  customer: CustomerUpdateOneWithoutContractInput
  provider: ProviderUpdateOneWithoutContractInput
  selectionID: String
}

input ContractUpdateWithoutCustomerDataInput {
  accountManagerEmail: String
  accountManagerGSM: String
  accountManagerName: String
  accountManagerPhone: String
  category: CategoryUpdateOneWithoutContractInput
  clientNumber: String
  contractAutoReconduct: Boolean
  contractBudget: Float
  contractEndingAlert: Boolean
  contractEndingAlertTime: Int
  contractID: String
  contractNumber: String
  contractPreavis: Int
  contractStart: DateTime
  contractTime: Int
  contractType: String
  provider: ProviderUpdateOneWithoutContractInput
  selectionID: String
}

input ContractUpdateWithoutProviderDataInput {
  accountManagerEmail: String
  accountManagerGSM: String
  accountManagerName: String
  accountManagerPhone: String
  category: CategoryUpdateOneWithoutContractInput
  clientNumber: String
  contractAutoReconduct: Boolean
  contractBudget: Float
  contractEndingAlert: Boolean
  contractEndingAlertTime: Int
  contractID: String
  contractNumber: String
  contractPreavis: Int
  contractStart: DateTime
  contractTime: Int
  contractType: String
  customer: CustomerUpdateOneWithoutContractInput
  selectionID: String
}

input ContractUpdateWithWhereUniqueWithoutCategoryInput {
  where: ContractWhereUniqueInput!
  data: ContractUpdateWithoutCategoryDataInput!
}

input ContractUpdateWithWhereUniqueWithoutCustomerInput {
  where: ContractWhereUniqueInput!
  data: ContractUpdateWithoutCustomerDataInput!
}

input ContractUpdateWithWhereUniqueWithoutProviderInput {
  where: ContractWhereUniqueInput!
  data: ContractUpdateWithoutProviderDataInput!
}

input ContractUpsertWithWhereUniqueWithoutCategoryInput {
  where: ContractWhereUniqueInput!
  update: ContractUpdateWithoutCategoryDataInput!
  create: ContractCreateWithoutCategoryInput!
}

input ContractUpsertWithWhereUniqueWithoutCustomerInput {
  where: ContractWhereUniqueInput!
  update: ContractUpdateWithoutCustomerDataInput!
  create: ContractCreateWithoutCustomerInput!
}

input ContractUpsertWithWhereUniqueWithoutProviderInput {
  where: ContractWhereUniqueInput!
  update: ContractUpdateWithoutProviderDataInput!
  create: ContractCreateWithoutProviderInput!
}

input ContractWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  accountManagerEmail: String
  accountManagerEmail_not: String
  accountManagerEmail_in: [String!]
  accountManagerEmail_not_in: [String!]
  accountManagerEmail_lt: String
  accountManagerEmail_lte: String
  accountManagerEmail_gt: String
  accountManagerEmail_gte: String
  accountManagerEmail_contains: String
  accountManagerEmail_not_contains: String
  accountManagerEmail_starts_with: String
  accountManagerEmail_not_starts_with: String
  accountManagerEmail_ends_with: String
  accountManagerEmail_not_ends_with: String
  accountManagerGSM: String
  accountManagerGSM_not: String
  accountManagerGSM_in: [String!]
  accountManagerGSM_not_in: [String!]
  accountManagerGSM_lt: String
  accountManagerGSM_lte: String
  accountManagerGSM_gt: String
  accountManagerGSM_gte: String
  accountManagerGSM_contains: String
  accountManagerGSM_not_contains: String
  accountManagerGSM_starts_with: String
  accountManagerGSM_not_starts_with: String
  accountManagerGSM_ends_with: String
  accountManagerGSM_not_ends_with: String
  accountManagerName: String
  accountManagerName_not: String
  accountManagerName_in: [String!]
  accountManagerName_not_in: [String!]
  accountManagerName_lt: String
  accountManagerName_lte: String
  accountManagerName_gt: String
  accountManagerName_gte: String
  accountManagerName_contains: String
  accountManagerName_not_contains: String
  accountManagerName_starts_with: String
  accountManagerName_not_starts_with: String
  accountManagerName_ends_with: String
  accountManagerName_not_ends_with: String
  accountManagerPhone: String
  accountManagerPhone_not: String
  accountManagerPhone_in: [String!]
  accountManagerPhone_not_in: [String!]
  accountManagerPhone_lt: String
  accountManagerPhone_lte: String
  accountManagerPhone_gt: String
  accountManagerPhone_gte: String
  accountManagerPhone_contains: String
  accountManagerPhone_not_contains: String
  accountManagerPhone_starts_with: String
  accountManagerPhone_not_starts_with: String
  accountManagerPhone_ends_with: String
  accountManagerPhone_not_ends_with: String
  category: CategoryWhereInput
  clientNumber: String
  clientNumber_not: String
  clientNumber_in: [String!]
  clientNumber_not_in: [String!]
  clientNumber_lt: String
  clientNumber_lte: String
  clientNumber_gt: String
  clientNumber_gte: String
  clientNumber_contains: String
  clientNumber_not_contains: String
  clientNumber_starts_with: String
  clientNumber_not_starts_with: String
  clientNumber_ends_with: String
  clientNumber_not_ends_with: String
  contractAutoReconduct: Boolean
  contractAutoReconduct_not: Boolean
  contractBudget: Float
  contractBudget_not: Float
  contractBudget_in: [Float!]
  contractBudget_not_in: [Float!]
  contractBudget_lt: Float
  contractBudget_lte: Float
  contractBudget_gt: Float
  contractBudget_gte: Float
  contractEndingAlert: Boolean
  contractEndingAlert_not: Boolean
  contractEndingAlertTime: Int
  contractEndingAlertTime_not: Int
  contractEndingAlertTime_in: [Int!]
  contractEndingAlertTime_not_in: [Int!]
  contractEndingAlertTime_lt: Int
  contractEndingAlertTime_lte: Int
  contractEndingAlertTime_gt: Int
  contractEndingAlertTime_gte: Int
  contractID: String
  contractID_not: String
  contractID_in: [String!]
  contractID_not_in: [String!]
  contractID_lt: String
  contractID_lte: String
  contractID_gt: String
  contractID_gte: String
  contractID_contains: String
  contractID_not_contains: String
  contractID_starts_with: String
  contractID_not_starts_with: String
  contractID_ends_with: String
  contractID_not_ends_with: String
  contractNumber: String
  contractNumber_not: String
  contractNumber_in: [String!]
  contractNumber_not_in: [String!]
  contractNumber_lt: String
  contractNumber_lte: String
  contractNumber_gt: String
  contractNumber_gte: String
  contractNumber_contains: String
  contractNumber_not_contains: String
  contractNumber_starts_with: String
  contractNumber_not_starts_with: String
  contractNumber_ends_with: String
  contractNumber_not_ends_with: String
  contractPreavis: Int
  contractPreavis_not: Int
  contractPreavis_in: [Int!]
  contractPreavis_not_in: [Int!]
  contractPreavis_lt: Int
  contractPreavis_lte: Int
  contractPreavis_gt: Int
  contractPreavis_gte: Int
  contractStart: DateTime
  contractStart_not: DateTime
  contractStart_in: [DateTime!]
  contractStart_not_in: [DateTime!]
  contractStart_lt: DateTime
  contractStart_lte: DateTime
  contractStart_gt: DateTime
  contractStart_gte: DateTime
  contractTime: Int
  contractTime_not: Int
  contractTime_in: [Int!]
  contractTime_not_in: [Int!]
  contractTime_lt: Int
  contractTime_lte: Int
  contractTime_gt: Int
  contractTime_gte: Int
  contractType: String
  contractType_not: String
  contractType_in: [String!]
  contractType_not_in: [String!]
  contractType_lt: String
  contractType_lte: String
  contractType_gt: String
  contractType_gte: String
  contractType_contains: String
  contractType_not_contains: String
  contractType_starts_with: String
  contractType_not_starts_with: String
  contractType_ends_with: String
  contractType_not_ends_with: String
  customer: CustomerWhereInput
  provider: ProviderWhereInput
  selectionID: String
  selectionID_not: String
  selectionID_in: [String!]
  selectionID_not_in: [String!]
  selectionID_lt: String
  selectionID_lte: String
  selectionID_gt: String
  selectionID_gte: String
  selectionID_contains: String
  selectionID_not_contains: String
  selectionID_starts_with: String
  selectionID_not_starts_with: String
  selectionID_ends_with: String
  selectionID_not_ends_with: String
  AND: [ContractWhereInput!]
  OR: [ContractWhereInput!]
  NOT: [ContractWhereInput!]
}

input ContractWhereUniqueInput {
  id: Int
  contractID: String
}

type Customer {
  id: Int!
  companyAddress: String
  companyCity: String
  companyCountry: String
  companyEmployee: Int
  companyName: String
  companyPhone: String
  companySize: String
  companyTva: String
  companyWebsite: String
  companyZip: String
  contract(where: ContractWhereInput, orderBy: ContractOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Contract!]
  countryCode: String
  createdAt: DateTime
  email: String!
  emailPro: String
  familyName: String!
  favProvs: String
  givenName: String!
  gsm: String
  headline: String
  lang: String
  lastlogin: DateTime
  name: String!
  numberlogin: Int!
  phone: String
  picture: String!
  review(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review!]
  title: String
  tuto: Boolean
  updatedAt: DateTime
  userId: String!
}

type CustomerConnection {
  pageInfo: PageInfo!
  edges: [CustomerEdge]!
  aggregate: AggregateCustomer!
}

input CustomerCreateInput {
  companyAddress: String
  companyCity: String
  companyCountry: String
  companyEmployee: Int
  companyName: String
  companyPhone: String
  companySize: String
  companyTva: String
  companyWebsite: String
  companyZip: String
  contract: ContractCreateManyWithoutCustomerInput
  countryCode: String
  email: String!
  emailPro: String
  familyName: String!
  favProvs: String
  givenName: String!
  gsm: String
  headline: String
  lang: String
  lastlogin: DateTime
  name: String!
  numberlogin: Int!
  phone: String
  picture: String!
  review: ReviewCreateManyWithoutAuthorInput
  title: String
  tuto: Boolean
  userId: String!
}

input CustomerCreateOneWithoutContractInput {
  create: CustomerCreateWithoutContractInput
  connect: CustomerWhereUniqueInput
}

input CustomerCreateOneWithoutReviewInput {
  create: CustomerCreateWithoutReviewInput
  connect: CustomerWhereUniqueInput
}

input CustomerCreateWithoutContractInput {
  companyAddress: String
  companyCity: String
  companyCountry: String
  companyEmployee: Int
  companyName: String
  companyPhone: String
  companySize: String
  companyTva: String
  companyWebsite: String
  companyZip: String
  countryCode: String
  email: String!
  emailPro: String
  familyName: String!
  favProvs: String
  givenName: String!
  gsm: String
  headline: String
  lang: String
  lastlogin: DateTime
  name: String!
  numberlogin: Int!
  phone: String
  picture: String!
  review: ReviewCreateManyWithoutAuthorInput
  title: String
  tuto: Boolean
  userId: String!
}

input CustomerCreateWithoutReviewInput {
  companyAddress: String
  companyCity: String
  companyCountry: String
  companyEmployee: Int
  companyName: String
  companyPhone: String
  companySize: String
  companyTva: String
  companyWebsite: String
  companyZip: String
  contract: ContractCreateManyWithoutCustomerInput
  countryCode: String
  email: String!
  emailPro: String
  familyName: String!
  favProvs: String
  givenName: String!
  gsm: String
  headline: String
  lang: String
  lastlogin: DateTime
  name: String!
  numberlogin: Int!
  phone: String
  picture: String!
  title: String
  tuto: Boolean
  userId: String!
}

type CustomerEdge {
  node: Customer!
  cursor: String!
}

enum CustomerOrderByInput {
  id_ASC
  id_DESC
  companyAddress_ASC
  companyAddress_DESC
  companyCity_ASC
  companyCity_DESC
  companyCountry_ASC
  companyCountry_DESC
  companyEmployee_ASC
  companyEmployee_DESC
  companyName_ASC
  companyName_DESC
  companyPhone_ASC
  companyPhone_DESC
  companySize_ASC
  companySize_DESC
  companyTva_ASC
  companyTva_DESC
  companyWebsite_ASC
  companyWebsite_DESC
  companyZip_ASC
  companyZip_DESC
  countryCode_ASC
  countryCode_DESC
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  emailPro_ASC
  emailPro_DESC
  familyName_ASC
  familyName_DESC
  favProvs_ASC
  favProvs_DESC
  givenName_ASC
  givenName_DESC
  gsm_ASC
  gsm_DESC
  headline_ASC
  headline_DESC
  lang_ASC
  lang_DESC
  lastlogin_ASC
  lastlogin_DESC
  name_ASC
  name_DESC
  numberlogin_ASC
  numberlogin_DESC
  phone_ASC
  phone_DESC
  picture_ASC
  picture_DESC
  title_ASC
  title_DESC
  tuto_ASC
  tuto_DESC
  updatedAt_ASC
  updatedAt_DESC
  userId_ASC
  userId_DESC
}

type CustomerPreviousValues {
  id: Int!
  companyAddress: String
  companyCity: String
  companyCountry: String
  companyEmployee: Int
  companyName: String
  companyPhone: String
  companySize: String
  companyTva: String
  companyWebsite: String
  companyZip: String
  countryCode: String
  createdAt: DateTime
  email: String!
  emailPro: String
  familyName: String!
  favProvs: String
  givenName: String!
  gsm: String
  headline: String
  lang: String
  lastlogin: DateTime
  name: String!
  numberlogin: Int!
  phone: String
  picture: String!
  title: String
  tuto: Boolean
  updatedAt: DateTime
  userId: String!
}

type CustomerSubscriptionPayload {
  mutation: MutationType!
  node: Customer
  updatedFields: [String!]
  previousValues: CustomerPreviousValues
}

input CustomerSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CustomerWhereInput
  AND: [CustomerSubscriptionWhereInput!]
  OR: [CustomerSubscriptionWhereInput!]
  NOT: [CustomerSubscriptionWhereInput!]
}

input CustomerUpdateInput {
  companyAddress: String
  companyCity: String
  companyCountry: String
  companyEmployee: Int
  companyName: String
  companyPhone: String
  companySize: String
  companyTva: String
  companyWebsite: String
  companyZip: String
  contract: ContractUpdateManyWithoutCustomerInput
  countryCode: String
  email: String
  emailPro: String
  familyName: String
  favProvs: String
  givenName: String
  gsm: String
  headline: String
  lang: String
  lastlogin: DateTime
  name: String
  numberlogin: Int
  phone: String
  picture: String
  review: ReviewUpdateManyWithoutAuthorInput
  title: String
  tuto: Boolean
  userId: String
}

input CustomerUpdateManyMutationInput {
  companyAddress: String
  companyCity: String
  companyCountry: String
  companyEmployee: Int
  companyName: String
  companyPhone: String
  companySize: String
  companyTva: String
  companyWebsite: String
  companyZip: String
  countryCode: String
  email: String
  emailPro: String
  familyName: String
  favProvs: String
  givenName: String
  gsm: String
  headline: String
  lang: String
  lastlogin: DateTime
  name: String
  numberlogin: Int
  phone: String
  picture: String
  title: String
  tuto: Boolean
  userId: String
}

input CustomerUpdateOneWithoutContractInput {
  create: CustomerCreateWithoutContractInput
  update: CustomerUpdateWithoutContractDataInput
  upsert: CustomerUpsertWithoutContractInput
  delete: Boolean
  disconnect: Boolean
  connect: CustomerWhereUniqueInput
}

input CustomerUpdateOneWithoutReviewInput {
  create: CustomerCreateWithoutReviewInput
  update: CustomerUpdateWithoutReviewDataInput
  upsert: CustomerUpsertWithoutReviewInput
  delete: Boolean
  disconnect: Boolean
  connect: CustomerWhereUniqueInput
}

input CustomerUpdateWithoutContractDataInput {
  companyAddress: String
  companyCity: String
  companyCountry: String
  companyEmployee: Int
  companyName: String
  companyPhone: String
  companySize: String
  companyTva: String
  companyWebsite: String
  companyZip: String
  countryCode: String
  email: String
  emailPro: String
  familyName: String
  favProvs: String
  givenName: String
  gsm: String
  headline: String
  lang: String
  lastlogin: DateTime
  name: String
  numberlogin: Int
  phone: String
  picture: String
  review: ReviewUpdateManyWithoutAuthorInput
  title: String
  tuto: Boolean
  userId: String
}

input CustomerUpdateWithoutReviewDataInput {
  companyAddress: String
  companyCity: String
  companyCountry: String
  companyEmployee: Int
  companyName: String
  companyPhone: String
  companySize: String
  companyTva: String
  companyWebsite: String
  companyZip: String
  contract: ContractUpdateManyWithoutCustomerInput
  countryCode: String
  email: String
  emailPro: String
  familyName: String
  favProvs: String
  givenName: String
  gsm: String
  headline: String
  lang: String
  lastlogin: DateTime
  name: String
  numberlogin: Int
  phone: String
  picture: String
  title: String
  tuto: Boolean
  userId: String
}

input CustomerUpsertWithoutContractInput {
  update: CustomerUpdateWithoutContractDataInput!
  create: CustomerCreateWithoutContractInput!
}

input CustomerUpsertWithoutReviewInput {
  update: CustomerUpdateWithoutReviewDataInput!
  create: CustomerCreateWithoutReviewInput!
}

input CustomerWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  companyAddress: String
  companyAddress_not: String
  companyAddress_in: [String!]
  companyAddress_not_in: [String!]
  companyAddress_lt: String
  companyAddress_lte: String
  companyAddress_gt: String
  companyAddress_gte: String
  companyAddress_contains: String
  companyAddress_not_contains: String
  companyAddress_starts_with: String
  companyAddress_not_starts_with: String
  companyAddress_ends_with: String
  companyAddress_not_ends_with: String
  companyCity: String
  companyCity_not: String
  companyCity_in: [String!]
  companyCity_not_in: [String!]
  companyCity_lt: String
  companyCity_lte: String
  companyCity_gt: String
  companyCity_gte: String
  companyCity_contains: String
  companyCity_not_contains: String
  companyCity_starts_with: String
  companyCity_not_starts_with: String
  companyCity_ends_with: String
  companyCity_not_ends_with: String
  companyCountry: String
  companyCountry_not: String
  companyCountry_in: [String!]
  companyCountry_not_in: [String!]
  companyCountry_lt: String
  companyCountry_lte: String
  companyCountry_gt: String
  companyCountry_gte: String
  companyCountry_contains: String
  companyCountry_not_contains: String
  companyCountry_starts_with: String
  companyCountry_not_starts_with: String
  companyCountry_ends_with: String
  companyCountry_not_ends_with: String
  companyEmployee: Int
  companyEmployee_not: Int
  companyEmployee_in: [Int!]
  companyEmployee_not_in: [Int!]
  companyEmployee_lt: Int
  companyEmployee_lte: Int
  companyEmployee_gt: Int
  companyEmployee_gte: Int
  companyName: String
  companyName_not: String
  companyName_in: [String!]
  companyName_not_in: [String!]
  companyName_lt: String
  companyName_lte: String
  companyName_gt: String
  companyName_gte: String
  companyName_contains: String
  companyName_not_contains: String
  companyName_starts_with: String
  companyName_not_starts_with: String
  companyName_ends_with: String
  companyName_not_ends_with: String
  companyPhone: String
  companyPhone_not: String
  companyPhone_in: [String!]
  companyPhone_not_in: [String!]
  companyPhone_lt: String
  companyPhone_lte: String
  companyPhone_gt: String
  companyPhone_gte: String
  companyPhone_contains: String
  companyPhone_not_contains: String
  companyPhone_starts_with: String
  companyPhone_not_starts_with: String
  companyPhone_ends_with: String
  companyPhone_not_ends_with: String
  companySize: String
  companySize_not: String
  companySize_in: [String!]
  companySize_not_in: [String!]
  companySize_lt: String
  companySize_lte: String
  companySize_gt: String
  companySize_gte: String
  companySize_contains: String
  companySize_not_contains: String
  companySize_starts_with: String
  companySize_not_starts_with: String
  companySize_ends_with: String
  companySize_not_ends_with: String
  companyTva: String
  companyTva_not: String
  companyTva_in: [String!]
  companyTva_not_in: [String!]
  companyTva_lt: String
  companyTva_lte: String
  companyTva_gt: String
  companyTva_gte: String
  companyTva_contains: String
  companyTva_not_contains: String
  companyTva_starts_with: String
  companyTva_not_starts_with: String
  companyTva_ends_with: String
  companyTva_not_ends_with: String
  companyWebsite: String
  companyWebsite_not: String
  companyWebsite_in: [String!]
  companyWebsite_not_in: [String!]
  companyWebsite_lt: String
  companyWebsite_lte: String
  companyWebsite_gt: String
  companyWebsite_gte: String
  companyWebsite_contains: String
  companyWebsite_not_contains: String
  companyWebsite_starts_with: String
  companyWebsite_not_starts_with: String
  companyWebsite_ends_with: String
  companyWebsite_not_ends_with: String
  companyZip: String
  companyZip_not: String
  companyZip_in: [String!]
  companyZip_not_in: [String!]
  companyZip_lt: String
  companyZip_lte: String
  companyZip_gt: String
  companyZip_gte: String
  companyZip_contains: String
  companyZip_not_contains: String
  companyZip_starts_with: String
  companyZip_not_starts_with: String
  companyZip_ends_with: String
  companyZip_not_ends_with: String
  contract_every: ContractWhereInput
  contract_some: ContractWhereInput
  contract_none: ContractWhereInput
  countryCode: String
  countryCode_not: String
  countryCode_in: [String!]
  countryCode_not_in: [String!]
  countryCode_lt: String
  countryCode_lte: String
  countryCode_gt: String
  countryCode_gte: String
  countryCode_contains: String
  countryCode_not_contains: String
  countryCode_starts_with: String
  countryCode_not_starts_with: String
  countryCode_ends_with: String
  countryCode_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  emailPro: String
  emailPro_not: String
  emailPro_in: [String!]
  emailPro_not_in: [String!]
  emailPro_lt: String
  emailPro_lte: String
  emailPro_gt: String
  emailPro_gte: String
  emailPro_contains: String
  emailPro_not_contains: String
  emailPro_starts_with: String
  emailPro_not_starts_with: String
  emailPro_ends_with: String
  emailPro_not_ends_with: String
  familyName: String
  familyName_not: String
  familyName_in: [String!]
  familyName_not_in: [String!]
  familyName_lt: String
  familyName_lte: String
  familyName_gt: String
  familyName_gte: String
  familyName_contains: String
  familyName_not_contains: String
  familyName_starts_with: String
  familyName_not_starts_with: String
  familyName_ends_with: String
  familyName_not_ends_with: String
  favProvs: String
  favProvs_not: String
  favProvs_in: [String!]
  favProvs_not_in: [String!]
  favProvs_lt: String
  favProvs_lte: String
  favProvs_gt: String
  favProvs_gte: String
  favProvs_contains: String
  favProvs_not_contains: String
  favProvs_starts_with: String
  favProvs_not_starts_with: String
  favProvs_ends_with: String
  favProvs_not_ends_with: String
  givenName: String
  givenName_not: String
  givenName_in: [String!]
  givenName_not_in: [String!]
  givenName_lt: String
  givenName_lte: String
  givenName_gt: String
  givenName_gte: String
  givenName_contains: String
  givenName_not_contains: String
  givenName_starts_with: String
  givenName_not_starts_with: String
  givenName_ends_with: String
  givenName_not_ends_with: String
  gsm: String
  gsm_not: String
  gsm_in: [String!]
  gsm_not_in: [String!]
  gsm_lt: String
  gsm_lte: String
  gsm_gt: String
  gsm_gte: String
  gsm_contains: String
  gsm_not_contains: String
  gsm_starts_with: String
  gsm_not_starts_with: String
  gsm_ends_with: String
  gsm_not_ends_with: String
  headline: String
  headline_not: String
  headline_in: [String!]
  headline_not_in: [String!]
  headline_lt: String
  headline_lte: String
  headline_gt: String
  headline_gte: String
  headline_contains: String
  headline_not_contains: String
  headline_starts_with: String
  headline_not_starts_with: String
  headline_ends_with: String
  headline_not_ends_with: String
  lang: String
  lang_not: String
  lang_in: [String!]
  lang_not_in: [String!]
  lang_lt: String
  lang_lte: String
  lang_gt: String
  lang_gte: String
  lang_contains: String
  lang_not_contains: String
  lang_starts_with: String
  lang_not_starts_with: String
  lang_ends_with: String
  lang_not_ends_with: String
  lastlogin: DateTime
  lastlogin_not: DateTime
  lastlogin_in: [DateTime!]
  lastlogin_not_in: [DateTime!]
  lastlogin_lt: DateTime
  lastlogin_lte: DateTime
  lastlogin_gt: DateTime
  lastlogin_gte: DateTime
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  numberlogin: Int
  numberlogin_not: Int
  numberlogin_in: [Int!]
  numberlogin_not_in: [Int!]
  numberlogin_lt: Int
  numberlogin_lte: Int
  numberlogin_gt: Int
  numberlogin_gte: Int
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  picture: String
  picture_not: String
  picture_in: [String!]
  picture_not_in: [String!]
  picture_lt: String
  picture_lte: String
  picture_gt: String
  picture_gte: String
  picture_contains: String
  picture_not_contains: String
  picture_starts_with: String
  picture_not_starts_with: String
  picture_ends_with: String
  picture_not_ends_with: String
  review_every: ReviewWhereInput
  review_some: ReviewWhereInput
  review_none: ReviewWhereInput
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  tuto: Boolean
  tuto_not: Boolean
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [CustomerWhereInput!]
  OR: [CustomerWhereInput!]
  NOT: [CustomerWhereInput!]
}

input CustomerWhereUniqueInput {
  id: Int
  userId: String
}

scalar DateTime

scalar Long

type Mutation {
  createCategory(data: CategoryCreateInput!): Category!
  updateCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category
  updateManyCategories(data: CategoryUpdateManyMutationInput!, where: CategoryWhereInput): BatchPayload!
  upsertCategory(where: CategoryWhereUniqueInput!, create: CategoryCreateInput!, update: CategoryUpdateInput!): Category!
  deleteCategory(where: CategoryWhereUniqueInput!): Category
  deleteManyCategories(where: CategoryWhereInput): BatchPayload!
  createContract(data: ContractCreateInput!): Contract!
  updateContract(data: ContractUpdateInput!, where: ContractWhereUniqueInput!): Contract
  updateManyContracts(data: ContractUpdateManyMutationInput!, where: ContractWhereInput): BatchPayload!
  upsertContract(where: ContractWhereUniqueInput!, create: ContractCreateInput!, update: ContractUpdateInput!): Contract!
  deleteContract(where: ContractWhereUniqueInput!): Contract
  deleteManyContracts(where: ContractWhereInput): BatchPayload!
  createCustomer(data: CustomerCreateInput!): Customer!
  updateCustomer(data: CustomerUpdateInput!, where: CustomerWhereUniqueInput!): Customer
  updateManyCustomers(data: CustomerUpdateManyMutationInput!, where: CustomerWhereInput): BatchPayload!
  upsertCustomer(where: CustomerWhereUniqueInput!, create: CustomerCreateInput!, update: CustomerUpdateInput!): Customer!
  deleteCustomer(where: CustomerWhereUniqueInput!): Customer
  deleteManyCustomers(where: CustomerWhereInput): BatchPayload!
  createNewsletter(data: NewsletterCreateInput!): Newsletter!
  updateNewsletter(data: NewsletterUpdateInput!, where: NewsletterWhereUniqueInput!): Newsletter
  updateManyNewsletters(data: NewsletterUpdateManyMutationInput!, where: NewsletterWhereInput): BatchPayload!
  upsertNewsletter(where: NewsletterWhereUniqueInput!, create: NewsletterCreateInput!, update: NewsletterUpdateInput!): Newsletter!
  deleteNewsletter(where: NewsletterWhereUniqueInput!): Newsletter
  deleteManyNewsletters(where: NewsletterWhereInput): BatchPayload!
  createPriceCategory(data: PriceCategoryCreateInput!): PriceCategory!
  updatePriceCategory(data: PriceCategoryUpdateInput!, where: PriceCategoryWhereUniqueInput!): PriceCategory
  updateManyPriceCategories(data: PriceCategoryUpdateManyMutationInput!, where: PriceCategoryWhereInput): BatchPayload!
  upsertPriceCategory(where: PriceCategoryWhereUniqueInput!, create: PriceCategoryCreateInput!, update: PriceCategoryUpdateInput!): PriceCategory!
  deletePriceCategory(where: PriceCategoryWhereUniqueInput!): PriceCategory
  deleteManyPriceCategories(where: PriceCategoryWhereInput): BatchPayload!
  createProvider(data: ProviderCreateInput!): Provider!
  updateProvider(data: ProviderUpdateInput!, where: ProviderWhereUniqueInput!): Provider
  updateManyProviders(data: ProviderUpdateManyMutationInput!, where: ProviderWhereInput): BatchPayload!
  upsertProvider(where: ProviderWhereUniqueInput!, create: ProviderCreateInput!, update: ProviderUpdateInput!): Provider!
  deleteProvider(where: ProviderWhereUniqueInput!): Provider
  deleteManyProviders(where: ProviderWhereInput): BatchPayload!
  createReview(data: ReviewCreateInput!): Review!
  updateReview(data: ReviewUpdateInput!, where: ReviewWhereUniqueInput!): Review
  updateManyReviews(data: ReviewUpdateManyMutationInput!, where: ReviewWhereInput): BatchPayload!
  upsertReview(where: ReviewWhereUniqueInput!, create: ReviewCreateInput!, update: ReviewUpdateInput!): Review!
  deleteReview(where: ReviewWhereUniqueInput!): Review
  deleteManyReviews(where: ReviewWhereInput): BatchPayload!
  createSocialMedia(data: SocialMediaCreateInput!): SocialMedia!
  updateSocialMedia(data: SocialMediaUpdateInput!, where: SocialMediaWhereUniqueInput!): SocialMedia
  updateManySocialMedias(data: SocialMediaUpdateManyMutationInput!, where: SocialMediaWhereInput): BatchPayload!
  upsertSocialMedia(where: SocialMediaWhereUniqueInput!, create: SocialMediaCreateInput!, update: SocialMediaUpdateInput!): SocialMedia!
  deleteSocialMedia(where: SocialMediaWhereUniqueInput!): SocialMedia
  deleteManySocialMedias(where: SocialMediaWhereInput): BatchPayload!
  createSubCategory(data: SubCategoryCreateInput!): SubCategory!
  updateSubCategory(data: SubCategoryUpdateInput!, where: SubCategoryWhereUniqueInput!): SubCategory
  updateManySubCategories(data: SubCategoryUpdateManyMutationInput!, where: SubCategoryWhereInput): BatchPayload!
  upsertSubCategory(where: SubCategoryWhereUniqueInput!, create: SubCategoryCreateInput!, update: SubCategoryUpdateInput!): SubCategory!
  deleteSubCategory(where: SubCategoryWhereUniqueInput!): SubCategory
  deleteManySubCategories(where: SubCategoryWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

type Newsletter {
  id: Int!
  createdAt: DateTime
  email: String!
}

type NewsletterConnection {
  pageInfo: PageInfo!
  edges: [NewsletterEdge]!
  aggregate: AggregateNewsletter!
}

input NewsletterCreateInput {
  email: String!
}

type NewsletterEdge {
  node: Newsletter!
  cursor: String!
}

enum NewsletterOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
}

type NewsletterPreviousValues {
  id: Int!
  createdAt: DateTime
  email: String!
}

type NewsletterSubscriptionPayload {
  mutation: MutationType!
  node: Newsletter
  updatedFields: [String!]
  previousValues: NewsletterPreviousValues
}

input NewsletterSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: NewsletterWhereInput
  AND: [NewsletterSubscriptionWhereInput!]
  OR: [NewsletterSubscriptionWhereInput!]
  NOT: [NewsletterSubscriptionWhereInput!]
}

input NewsletterUpdateInput {
  email: String
}

input NewsletterUpdateManyMutationInput {
  email: String
}

input NewsletterWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  AND: [NewsletterWhereInput!]
  OR: [NewsletterWhereInput!]
  NOT: [NewsletterWhereInput!]
}

input NewsletterWhereUniqueInput {
  id: Int
  email: String
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type PriceCategory {
  id: Int!
  name: String!
  provider(where: ProviderWhereInput, orderBy: ProviderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Provider!]
}

type PriceCategoryConnection {
  pageInfo: PageInfo!
  edges: [PriceCategoryEdge]!
  aggregate: AggregatePriceCategory!
}

input PriceCategoryCreateInput {
  name: String!
  provider: ProviderCreateManyWithoutPriceCategoryInput
}

input PriceCategoryCreateOneWithoutProviderInput {
  create: PriceCategoryCreateWithoutProviderInput
  connect: PriceCategoryWhereUniqueInput
}

input PriceCategoryCreateWithoutProviderInput {
  name: String!
}

type PriceCategoryEdge {
  node: PriceCategory!
  cursor: String!
}

enum PriceCategoryOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
}

type PriceCategoryPreviousValues {
  id: Int!
  name: String!
}

type PriceCategorySubscriptionPayload {
  mutation: MutationType!
  node: PriceCategory
  updatedFields: [String!]
  previousValues: PriceCategoryPreviousValues
}

input PriceCategorySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PriceCategoryWhereInput
  AND: [PriceCategorySubscriptionWhereInput!]
  OR: [PriceCategorySubscriptionWhereInput!]
  NOT: [PriceCategorySubscriptionWhereInput!]
}

input PriceCategoryUpdateInput {
  name: String
  provider: ProviderUpdateManyWithoutPriceCategoryInput
}

input PriceCategoryUpdateManyMutationInput {
  name: String
}

input PriceCategoryUpdateOneWithoutProviderInput {
  create: PriceCategoryCreateWithoutProviderInput
  update: PriceCategoryUpdateWithoutProviderDataInput
  upsert: PriceCategoryUpsertWithoutProviderInput
  delete: Boolean
  disconnect: Boolean
  connect: PriceCategoryWhereUniqueInput
}

input PriceCategoryUpdateWithoutProviderDataInput {
  name: String
}

input PriceCategoryUpsertWithoutProviderInput {
  update: PriceCategoryUpdateWithoutProviderDataInput!
  create: PriceCategoryCreateWithoutProviderInput!
}

input PriceCategoryWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  provider_every: ProviderWhereInput
  provider_some: ProviderWhereInput
  provider_none: ProviderWhereInput
  AND: [PriceCategoryWhereInput!]
  OR: [PriceCategoryWhereInput!]
  NOT: [PriceCategoryWhereInput!]
}

input PriceCategoryWhereUniqueInput {
  id: Int
}

type Provider {
  id: Int!
  address: String
  category(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category!]
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  contract(where: ContractWhereInput, orderBy: ContractOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Contract!]
  countryId: Int
  createdAt: DateTime
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String!
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  priceCategory: PriceCategory
  pricingAVG: Float
  ratingAVG: Float
  review(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review!]
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  socialMedia(where: SocialMediaWhereInput, orderBy: SocialMediaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SocialMedia!]
  street: String
  test: String
  testJson: String
  tva: String
  updatedAt: DateTime
  user(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  verified: Boolean
  widgetId: String
  zip: String
}

type ProviderConnection {
  pageInfo: PageInfo!
  edges: [ProviderEdge]!
  aggregate: AggregateProvider!
}

input ProviderCreateInput {
  address: String
  category: CategoryCreateManyWithoutProviderInput
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  contract: ContractCreateManyWithoutProviderInput
  countryId: Int
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String!
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  priceCategory: PriceCategoryCreateOneWithoutProviderInput
  pricingAVG: Float
  ratingAVG: Float
  review: ReviewCreateManyWithoutProviderInput
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  socialMedia: SocialMediaCreateManyWithoutProviderInput
  street: String
  test: String
  testJson: String
  tva: String
  user: UserCreateManyWithoutProviderInput
  verified: Boolean
  widgetId: String
  zip: String
}

input ProviderCreateManyWithoutCategoryInput {
  create: [ProviderCreateWithoutCategoryInput!]
  connect: [ProviderWhereUniqueInput!]
}

input ProviderCreateManyWithoutPriceCategoryInput {
  create: [ProviderCreateWithoutPriceCategoryInput!]
  connect: [ProviderWhereUniqueInput!]
}

input ProviderCreateManyWithoutUserInput {
  create: [ProviderCreateWithoutUserInput!]
  connect: [ProviderWhereUniqueInput!]
}

input ProviderCreateOneWithoutContractInput {
  create: ProviderCreateWithoutContractInput
  connect: ProviderWhereUniqueInput
}

input ProviderCreateOneWithoutReviewInput {
  create: ProviderCreateWithoutReviewInput
  connect: ProviderWhereUniqueInput
}

input ProviderCreateOneWithoutSocialMediaInput {
  create: ProviderCreateWithoutSocialMediaInput
  connect: ProviderWhereUniqueInput
}

input ProviderCreateWithoutCategoryInput {
  address: String
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  contract: ContractCreateManyWithoutProviderInput
  countryId: Int
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String!
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  priceCategory: PriceCategoryCreateOneWithoutProviderInput
  pricingAVG: Float
  ratingAVG: Float
  review: ReviewCreateManyWithoutProviderInput
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  socialMedia: SocialMediaCreateManyWithoutProviderInput
  street: String
  test: String
  testJson: String
  tva: String
  user: UserCreateManyWithoutProviderInput
  verified: Boolean
  widgetId: String
  zip: String
}

input ProviderCreateWithoutContractInput {
  address: String
  category: CategoryCreateManyWithoutProviderInput
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  countryId: Int
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String!
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  priceCategory: PriceCategoryCreateOneWithoutProviderInput
  pricingAVG: Float
  ratingAVG: Float
  review: ReviewCreateManyWithoutProviderInput
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  socialMedia: SocialMediaCreateManyWithoutProviderInput
  street: String
  test: String
  testJson: String
  tva: String
  user: UserCreateManyWithoutProviderInput
  verified: Boolean
  widgetId: String
  zip: String
}

input ProviderCreateWithoutPriceCategoryInput {
  address: String
  category: CategoryCreateManyWithoutProviderInput
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  contract: ContractCreateManyWithoutProviderInput
  countryId: Int
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String!
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  pricingAVG: Float
  ratingAVG: Float
  review: ReviewCreateManyWithoutProviderInput
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  socialMedia: SocialMediaCreateManyWithoutProviderInput
  street: String
  test: String
  testJson: String
  tva: String
  user: UserCreateManyWithoutProviderInput
  verified: Boolean
  widgetId: String
  zip: String
}

input ProviderCreateWithoutReviewInput {
  address: String
  category: CategoryCreateManyWithoutProviderInput
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  contract: ContractCreateManyWithoutProviderInput
  countryId: Int
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String!
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  priceCategory: PriceCategoryCreateOneWithoutProviderInput
  pricingAVG: Float
  ratingAVG: Float
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  socialMedia: SocialMediaCreateManyWithoutProviderInput
  street: String
  test: String
  testJson: String
  tva: String
  user: UserCreateManyWithoutProviderInput
  verified: Boolean
  widgetId: String
  zip: String
}

input ProviderCreateWithoutSocialMediaInput {
  address: String
  category: CategoryCreateManyWithoutProviderInput
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  contract: ContractCreateManyWithoutProviderInput
  countryId: Int
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String!
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  priceCategory: PriceCategoryCreateOneWithoutProviderInput
  pricingAVG: Float
  ratingAVG: Float
  review: ReviewCreateManyWithoutProviderInput
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  street: String
  test: String
  testJson: String
  tva: String
  user: UserCreateManyWithoutProviderInput
  verified: Boolean
  widgetId: String
  zip: String
}

input ProviderCreateWithoutUserInput {
  address: String
  category: CategoryCreateManyWithoutProviderInput
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  contract: ContractCreateManyWithoutProviderInput
  countryId: Int
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String!
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  priceCategory: PriceCategoryCreateOneWithoutProviderInput
  pricingAVG: Float
  ratingAVG: Float
  review: ReviewCreateManyWithoutProviderInput
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  socialMedia: SocialMediaCreateManyWithoutProviderInput
  street: String
  test: String
  testJson: String
  tva: String
  verified: Boolean
  widgetId: String
  zip: String
}

type ProviderEdge {
  node: Provider!
  cursor: String!
}

enum ProviderOrderByInput {
  id_ASC
  id_DESC
  address_ASC
  address_DESC
  city_ASC
  city_DESC
  contact_ASC
  contact_DESC
  contactEmail_ASC
  contactEmail_DESC
  contacten_ASC
  contacten_DESC
  contactfr_ASC
  contactfr_DESC
  contactnl_ASC
  contactnl_DESC
  countryId_ASC
  countryId_DESC
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  emailen_ASC
  emailen_DESC
  emailfr_ASC
  emailfr_DESC
  emailnl_ASC
  emailnl_DESC
  faq_ASC
  faq_DESC
  faqen_ASC
  faqen_DESC
  faqfr_ASC
  faqfr_DESC
  faqnl_ASC
  faqnl_DESC
  login_ASC
  login_DESC
  loginen_ASC
  loginen_DESC
  loginfr_ASC
  loginfr_DESC
  loginnl_ASC
  loginnl_DESC
  logo_ASC
  logo_DESC
  name_ASC
  name_DESC
  phone_ASC
  phone_DESC
  phoneen_ASC
  phoneen_DESC
  phonefr_ASC
  phonefr_DESC
  phonenl_ASC
  phonenl_DESC
  pricingAVG_ASC
  pricingAVG_DESC
  ratingAVG_ASC
  ratingAVG_DESC
  shops_ASC
  shops_DESC
  site_ASC
  site_DESC
  siteen_ASC
  siteen_DESC
  sitefr_ASC
  sitefr_DESC
  sitenl_ASC
  sitenl_DESC
  street_ASC
  street_DESC
  test_ASC
  test_DESC
  testJson_ASC
  testJson_DESC
  tva_ASC
  tva_DESC
  updatedAt_ASC
  updatedAt_DESC
  verified_ASC
  verified_DESC
  widgetId_ASC
  widgetId_DESC
  zip_ASC
  zip_DESC
}

type ProviderPreviousValues {
  id: Int!
  address: String
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  countryId: Int
  createdAt: DateTime
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String!
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  pricingAVG: Float
  ratingAVG: Float
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  street: String
  test: String
  testJson: String
  tva: String
  updatedAt: DateTime
  verified: Boolean
  widgetId: String
  zip: String
}

input ProviderScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  address: String
  address_not: String
  address_in: [String!]
  address_not_in: [String!]
  address_lt: String
  address_lte: String
  address_gt: String
  address_gte: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  city: String
  city_not: String
  city_in: [String!]
  city_not_in: [String!]
  city_lt: String
  city_lte: String
  city_gt: String
  city_gte: String
  city_contains: String
  city_not_contains: String
  city_starts_with: String
  city_not_starts_with: String
  city_ends_with: String
  city_not_ends_with: String
  contact: String
  contact_not: String
  contact_in: [String!]
  contact_not_in: [String!]
  contact_lt: String
  contact_lte: String
  contact_gt: String
  contact_gte: String
  contact_contains: String
  contact_not_contains: String
  contact_starts_with: String
  contact_not_starts_with: String
  contact_ends_with: String
  contact_not_ends_with: String
  contactEmail: String
  contactEmail_not: String
  contactEmail_in: [String!]
  contactEmail_not_in: [String!]
  contactEmail_lt: String
  contactEmail_lte: String
  contactEmail_gt: String
  contactEmail_gte: String
  contactEmail_contains: String
  contactEmail_not_contains: String
  contactEmail_starts_with: String
  contactEmail_not_starts_with: String
  contactEmail_ends_with: String
  contactEmail_not_ends_with: String
  contacten: String
  contacten_not: String
  contacten_in: [String!]
  contacten_not_in: [String!]
  contacten_lt: String
  contacten_lte: String
  contacten_gt: String
  contacten_gte: String
  contacten_contains: String
  contacten_not_contains: String
  contacten_starts_with: String
  contacten_not_starts_with: String
  contacten_ends_with: String
  contacten_not_ends_with: String
  contactfr: String
  contactfr_not: String
  contactfr_in: [String!]
  contactfr_not_in: [String!]
  contactfr_lt: String
  contactfr_lte: String
  contactfr_gt: String
  contactfr_gte: String
  contactfr_contains: String
  contactfr_not_contains: String
  contactfr_starts_with: String
  contactfr_not_starts_with: String
  contactfr_ends_with: String
  contactfr_not_ends_with: String
  contactnl: String
  contactnl_not: String
  contactnl_in: [String!]
  contactnl_not_in: [String!]
  contactnl_lt: String
  contactnl_lte: String
  contactnl_gt: String
  contactnl_gte: String
  contactnl_contains: String
  contactnl_not_contains: String
  contactnl_starts_with: String
  contactnl_not_starts_with: String
  contactnl_ends_with: String
  contactnl_not_ends_with: String
  countryId: Int
  countryId_not: Int
  countryId_in: [Int!]
  countryId_not_in: [Int!]
  countryId_lt: Int
  countryId_lte: Int
  countryId_gt: Int
  countryId_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  emailen: String
  emailen_not: String
  emailen_in: [String!]
  emailen_not_in: [String!]
  emailen_lt: String
  emailen_lte: String
  emailen_gt: String
  emailen_gte: String
  emailen_contains: String
  emailen_not_contains: String
  emailen_starts_with: String
  emailen_not_starts_with: String
  emailen_ends_with: String
  emailen_not_ends_with: String
  emailfr: String
  emailfr_not: String
  emailfr_in: [String!]
  emailfr_not_in: [String!]
  emailfr_lt: String
  emailfr_lte: String
  emailfr_gt: String
  emailfr_gte: String
  emailfr_contains: String
  emailfr_not_contains: String
  emailfr_starts_with: String
  emailfr_not_starts_with: String
  emailfr_ends_with: String
  emailfr_not_ends_with: String
  emailnl: String
  emailnl_not: String
  emailnl_in: [String!]
  emailnl_not_in: [String!]
  emailnl_lt: String
  emailnl_lte: String
  emailnl_gt: String
  emailnl_gte: String
  emailnl_contains: String
  emailnl_not_contains: String
  emailnl_starts_with: String
  emailnl_not_starts_with: String
  emailnl_ends_with: String
  emailnl_not_ends_with: String
  faq: String
  faq_not: String
  faq_in: [String!]
  faq_not_in: [String!]
  faq_lt: String
  faq_lte: String
  faq_gt: String
  faq_gte: String
  faq_contains: String
  faq_not_contains: String
  faq_starts_with: String
  faq_not_starts_with: String
  faq_ends_with: String
  faq_not_ends_with: String
  faqen: String
  faqen_not: String
  faqen_in: [String!]
  faqen_not_in: [String!]
  faqen_lt: String
  faqen_lte: String
  faqen_gt: String
  faqen_gte: String
  faqen_contains: String
  faqen_not_contains: String
  faqen_starts_with: String
  faqen_not_starts_with: String
  faqen_ends_with: String
  faqen_not_ends_with: String
  faqfr: String
  faqfr_not: String
  faqfr_in: [String!]
  faqfr_not_in: [String!]
  faqfr_lt: String
  faqfr_lte: String
  faqfr_gt: String
  faqfr_gte: String
  faqfr_contains: String
  faqfr_not_contains: String
  faqfr_starts_with: String
  faqfr_not_starts_with: String
  faqfr_ends_with: String
  faqfr_not_ends_with: String
  faqnl: String
  faqnl_not: String
  faqnl_in: [String!]
  faqnl_not_in: [String!]
  faqnl_lt: String
  faqnl_lte: String
  faqnl_gt: String
  faqnl_gte: String
  faqnl_contains: String
  faqnl_not_contains: String
  faqnl_starts_with: String
  faqnl_not_starts_with: String
  faqnl_ends_with: String
  faqnl_not_ends_with: String
  login: String
  login_not: String
  login_in: [String!]
  login_not_in: [String!]
  login_lt: String
  login_lte: String
  login_gt: String
  login_gte: String
  login_contains: String
  login_not_contains: String
  login_starts_with: String
  login_not_starts_with: String
  login_ends_with: String
  login_not_ends_with: String
  loginen: String
  loginen_not: String
  loginen_in: [String!]
  loginen_not_in: [String!]
  loginen_lt: String
  loginen_lte: String
  loginen_gt: String
  loginen_gte: String
  loginen_contains: String
  loginen_not_contains: String
  loginen_starts_with: String
  loginen_not_starts_with: String
  loginen_ends_with: String
  loginen_not_ends_with: String
  loginfr: String
  loginfr_not: String
  loginfr_in: [String!]
  loginfr_not_in: [String!]
  loginfr_lt: String
  loginfr_lte: String
  loginfr_gt: String
  loginfr_gte: String
  loginfr_contains: String
  loginfr_not_contains: String
  loginfr_starts_with: String
  loginfr_not_starts_with: String
  loginfr_ends_with: String
  loginfr_not_ends_with: String
  loginnl: String
  loginnl_not: String
  loginnl_in: [String!]
  loginnl_not_in: [String!]
  loginnl_lt: String
  loginnl_lte: String
  loginnl_gt: String
  loginnl_gte: String
  loginnl_contains: String
  loginnl_not_contains: String
  loginnl_starts_with: String
  loginnl_not_starts_with: String
  loginnl_ends_with: String
  loginnl_not_ends_with: String
  logo: String
  logo_not: String
  logo_in: [String!]
  logo_not_in: [String!]
  logo_lt: String
  logo_lte: String
  logo_gt: String
  logo_gte: String
  logo_contains: String
  logo_not_contains: String
  logo_starts_with: String
  logo_not_starts_with: String
  logo_ends_with: String
  logo_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phoneen: String
  phoneen_not: String
  phoneen_in: [String!]
  phoneen_not_in: [String!]
  phoneen_lt: String
  phoneen_lte: String
  phoneen_gt: String
  phoneen_gte: String
  phoneen_contains: String
  phoneen_not_contains: String
  phoneen_starts_with: String
  phoneen_not_starts_with: String
  phoneen_ends_with: String
  phoneen_not_ends_with: String
  phonefr: String
  phonefr_not: String
  phonefr_in: [String!]
  phonefr_not_in: [String!]
  phonefr_lt: String
  phonefr_lte: String
  phonefr_gt: String
  phonefr_gte: String
  phonefr_contains: String
  phonefr_not_contains: String
  phonefr_starts_with: String
  phonefr_not_starts_with: String
  phonefr_ends_with: String
  phonefr_not_ends_with: String
  phonenl: String
  phonenl_not: String
  phonenl_in: [String!]
  phonenl_not_in: [String!]
  phonenl_lt: String
  phonenl_lte: String
  phonenl_gt: String
  phonenl_gte: String
  phonenl_contains: String
  phonenl_not_contains: String
  phonenl_starts_with: String
  phonenl_not_starts_with: String
  phonenl_ends_with: String
  phonenl_not_ends_with: String
  pricingAVG: Float
  pricingAVG_not: Float
  pricingAVG_in: [Float!]
  pricingAVG_not_in: [Float!]
  pricingAVG_lt: Float
  pricingAVG_lte: Float
  pricingAVG_gt: Float
  pricingAVG_gte: Float
  ratingAVG: Float
  ratingAVG_not: Float
  ratingAVG_in: [Float!]
  ratingAVG_not_in: [Float!]
  ratingAVG_lt: Float
  ratingAVG_lte: Float
  ratingAVG_gt: Float
  ratingAVG_gte: Float
  shops: String
  shops_not: String
  shops_in: [String!]
  shops_not_in: [String!]
  shops_lt: String
  shops_lte: String
  shops_gt: String
  shops_gte: String
  shops_contains: String
  shops_not_contains: String
  shops_starts_with: String
  shops_not_starts_with: String
  shops_ends_with: String
  shops_not_ends_with: String
  site: String
  site_not: String
  site_in: [String!]
  site_not_in: [String!]
  site_lt: String
  site_lte: String
  site_gt: String
  site_gte: String
  site_contains: String
  site_not_contains: String
  site_starts_with: String
  site_not_starts_with: String
  site_ends_with: String
  site_not_ends_with: String
  siteen: String
  siteen_not: String
  siteen_in: [String!]
  siteen_not_in: [String!]
  siteen_lt: String
  siteen_lte: String
  siteen_gt: String
  siteen_gte: String
  siteen_contains: String
  siteen_not_contains: String
  siteen_starts_with: String
  siteen_not_starts_with: String
  siteen_ends_with: String
  siteen_not_ends_with: String
  sitefr: String
  sitefr_not: String
  sitefr_in: [String!]
  sitefr_not_in: [String!]
  sitefr_lt: String
  sitefr_lte: String
  sitefr_gt: String
  sitefr_gte: String
  sitefr_contains: String
  sitefr_not_contains: String
  sitefr_starts_with: String
  sitefr_not_starts_with: String
  sitefr_ends_with: String
  sitefr_not_ends_with: String
  sitenl: String
  sitenl_not: String
  sitenl_in: [String!]
  sitenl_not_in: [String!]
  sitenl_lt: String
  sitenl_lte: String
  sitenl_gt: String
  sitenl_gte: String
  sitenl_contains: String
  sitenl_not_contains: String
  sitenl_starts_with: String
  sitenl_not_starts_with: String
  sitenl_ends_with: String
  sitenl_not_ends_with: String
  street: String
  street_not: String
  street_in: [String!]
  street_not_in: [String!]
  street_lt: String
  street_lte: String
  street_gt: String
  street_gte: String
  street_contains: String
  street_not_contains: String
  street_starts_with: String
  street_not_starts_with: String
  street_ends_with: String
  street_not_ends_with: String
  test: String
  test_not: String
  test_in: [String!]
  test_not_in: [String!]
  test_lt: String
  test_lte: String
  test_gt: String
  test_gte: String
  test_contains: String
  test_not_contains: String
  test_starts_with: String
  test_not_starts_with: String
  test_ends_with: String
  test_not_ends_with: String
  testJson: String
  testJson_not: String
  testJson_in: [String!]
  testJson_not_in: [String!]
  testJson_lt: String
  testJson_lte: String
  testJson_gt: String
  testJson_gte: String
  testJson_contains: String
  testJson_not_contains: String
  testJson_starts_with: String
  testJson_not_starts_with: String
  testJson_ends_with: String
  testJson_not_ends_with: String
  tva: String
  tva_not: String
  tva_in: [String!]
  tva_not_in: [String!]
  tva_lt: String
  tva_lte: String
  tva_gt: String
  tva_gte: String
  tva_contains: String
  tva_not_contains: String
  tva_starts_with: String
  tva_not_starts_with: String
  tva_ends_with: String
  tva_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  verified: Boolean
  verified_not: Boolean
  widgetId: String
  widgetId_not: String
  widgetId_in: [String!]
  widgetId_not_in: [String!]
  widgetId_lt: String
  widgetId_lte: String
  widgetId_gt: String
  widgetId_gte: String
  widgetId_contains: String
  widgetId_not_contains: String
  widgetId_starts_with: String
  widgetId_not_starts_with: String
  widgetId_ends_with: String
  widgetId_not_ends_with: String
  zip: String
  zip_not: String
  zip_in: [String!]
  zip_not_in: [String!]
  zip_lt: String
  zip_lte: String
  zip_gt: String
  zip_gte: String
  zip_contains: String
  zip_not_contains: String
  zip_starts_with: String
  zip_not_starts_with: String
  zip_ends_with: String
  zip_not_ends_with: String
  AND: [ProviderScalarWhereInput!]
  OR: [ProviderScalarWhereInput!]
  NOT: [ProviderScalarWhereInput!]
}

type ProviderSubscriptionPayload {
  mutation: MutationType!
  node: Provider
  updatedFields: [String!]
  previousValues: ProviderPreviousValues
}

input ProviderSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ProviderWhereInput
  AND: [ProviderSubscriptionWhereInput!]
  OR: [ProviderSubscriptionWhereInput!]
  NOT: [ProviderSubscriptionWhereInput!]
}

input ProviderUpdateInput {
  address: String
  category: CategoryUpdateManyWithoutProviderInput
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  contract: ContractUpdateManyWithoutProviderInput
  countryId: Int
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  priceCategory: PriceCategoryUpdateOneWithoutProviderInput
  pricingAVG: Float
  ratingAVG: Float
  review: ReviewUpdateManyWithoutProviderInput
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  socialMedia: SocialMediaUpdateManyWithoutProviderInput
  street: String
  test: String
  testJson: String
  tva: String
  user: UserUpdateManyWithoutProviderInput
  verified: Boolean
  widgetId: String
  zip: String
}

input ProviderUpdateManyDataInput {
  address: String
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  countryId: Int
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  pricingAVG: Float
  ratingAVG: Float
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  street: String
  test: String
  testJson: String
  tva: String
  verified: Boolean
  widgetId: String
  zip: String
}

input ProviderUpdateManyMutationInput {
  address: String
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  countryId: Int
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  pricingAVG: Float
  ratingAVG: Float
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  street: String
  test: String
  testJson: String
  tva: String
  verified: Boolean
  widgetId: String
  zip: String
}

input ProviderUpdateManyWithoutCategoryInput {
  create: [ProviderCreateWithoutCategoryInput!]
  delete: [ProviderWhereUniqueInput!]
  connect: [ProviderWhereUniqueInput!]
  set: [ProviderWhereUniqueInput!]
  disconnect: [ProviderWhereUniqueInput!]
  update: [ProviderUpdateWithWhereUniqueWithoutCategoryInput!]
  upsert: [ProviderUpsertWithWhereUniqueWithoutCategoryInput!]
  deleteMany: [ProviderScalarWhereInput!]
  updateMany: [ProviderUpdateManyWithWhereNestedInput!]
}

input ProviderUpdateManyWithoutPriceCategoryInput {
  create: [ProviderCreateWithoutPriceCategoryInput!]
  delete: [ProviderWhereUniqueInput!]
  connect: [ProviderWhereUniqueInput!]
  set: [ProviderWhereUniqueInput!]
  disconnect: [ProviderWhereUniqueInput!]
  update: [ProviderUpdateWithWhereUniqueWithoutPriceCategoryInput!]
  upsert: [ProviderUpsertWithWhereUniqueWithoutPriceCategoryInput!]
  deleteMany: [ProviderScalarWhereInput!]
  updateMany: [ProviderUpdateManyWithWhereNestedInput!]
}

input ProviderUpdateManyWithoutUserInput {
  create: [ProviderCreateWithoutUserInput!]
  delete: [ProviderWhereUniqueInput!]
  connect: [ProviderWhereUniqueInput!]
  set: [ProviderWhereUniqueInput!]
  disconnect: [ProviderWhereUniqueInput!]
  update: [ProviderUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [ProviderUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [ProviderScalarWhereInput!]
  updateMany: [ProviderUpdateManyWithWhereNestedInput!]
}

input ProviderUpdateManyWithWhereNestedInput {
  where: ProviderScalarWhereInput!
  data: ProviderUpdateManyDataInput!
}

input ProviderUpdateOneWithoutContractInput {
  create: ProviderCreateWithoutContractInput
  update: ProviderUpdateWithoutContractDataInput
  upsert: ProviderUpsertWithoutContractInput
  delete: Boolean
  disconnect: Boolean
  connect: ProviderWhereUniqueInput
}

input ProviderUpdateOneWithoutReviewInput {
  create: ProviderCreateWithoutReviewInput
  update: ProviderUpdateWithoutReviewDataInput
  upsert: ProviderUpsertWithoutReviewInput
  delete: Boolean
  disconnect: Boolean
  connect: ProviderWhereUniqueInput
}

input ProviderUpdateOneWithoutSocialMediaInput {
  create: ProviderCreateWithoutSocialMediaInput
  update: ProviderUpdateWithoutSocialMediaDataInput
  upsert: ProviderUpsertWithoutSocialMediaInput
  delete: Boolean
  disconnect: Boolean
  connect: ProviderWhereUniqueInput
}

input ProviderUpdateWithoutCategoryDataInput {
  address: String
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  contract: ContractUpdateManyWithoutProviderInput
  countryId: Int
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  priceCategory: PriceCategoryUpdateOneWithoutProviderInput
  pricingAVG: Float
  ratingAVG: Float
  review: ReviewUpdateManyWithoutProviderInput
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  socialMedia: SocialMediaUpdateManyWithoutProviderInput
  street: String
  test: String
  testJson: String
  tva: String
  user: UserUpdateManyWithoutProviderInput
  verified: Boolean
  widgetId: String
  zip: String
}

input ProviderUpdateWithoutContractDataInput {
  address: String
  category: CategoryUpdateManyWithoutProviderInput
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  countryId: Int
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  priceCategory: PriceCategoryUpdateOneWithoutProviderInput
  pricingAVG: Float
  ratingAVG: Float
  review: ReviewUpdateManyWithoutProviderInput
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  socialMedia: SocialMediaUpdateManyWithoutProviderInput
  street: String
  test: String
  testJson: String
  tva: String
  user: UserUpdateManyWithoutProviderInput
  verified: Boolean
  widgetId: String
  zip: String
}

input ProviderUpdateWithoutPriceCategoryDataInput {
  address: String
  category: CategoryUpdateManyWithoutProviderInput
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  contract: ContractUpdateManyWithoutProviderInput
  countryId: Int
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  pricingAVG: Float
  ratingAVG: Float
  review: ReviewUpdateManyWithoutProviderInput
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  socialMedia: SocialMediaUpdateManyWithoutProviderInput
  street: String
  test: String
  testJson: String
  tva: String
  user: UserUpdateManyWithoutProviderInput
  verified: Boolean
  widgetId: String
  zip: String
}

input ProviderUpdateWithoutReviewDataInput {
  address: String
  category: CategoryUpdateManyWithoutProviderInput
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  contract: ContractUpdateManyWithoutProviderInput
  countryId: Int
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  priceCategory: PriceCategoryUpdateOneWithoutProviderInput
  pricingAVG: Float
  ratingAVG: Float
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  socialMedia: SocialMediaUpdateManyWithoutProviderInput
  street: String
  test: String
  testJson: String
  tva: String
  user: UserUpdateManyWithoutProviderInput
  verified: Boolean
  widgetId: String
  zip: String
}

input ProviderUpdateWithoutSocialMediaDataInput {
  address: String
  category: CategoryUpdateManyWithoutProviderInput
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  contract: ContractUpdateManyWithoutProviderInput
  countryId: Int
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  priceCategory: PriceCategoryUpdateOneWithoutProviderInput
  pricingAVG: Float
  ratingAVG: Float
  review: ReviewUpdateManyWithoutProviderInput
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  street: String
  test: String
  testJson: String
  tva: String
  user: UserUpdateManyWithoutProviderInput
  verified: Boolean
  widgetId: String
  zip: String
}

input ProviderUpdateWithoutUserDataInput {
  address: String
  category: CategoryUpdateManyWithoutProviderInput
  city: String
  contact: String
  contactEmail: String
  contacten: String
  contactfr: String
  contactnl: String
  contract: ContractUpdateManyWithoutProviderInput
  countryId: Int
  email: String
  emailen: String
  emailfr: String
  emailnl: String
  faq: String
  faqen: String
  faqfr: String
  faqnl: String
  login: String
  loginen: String
  loginfr: String
  loginnl: String
  logo: String
  name: String
  phone: String
  phoneen: String
  phonefr: String
  phonenl: String
  priceCategory: PriceCategoryUpdateOneWithoutProviderInput
  pricingAVG: Float
  ratingAVG: Float
  review: ReviewUpdateManyWithoutProviderInput
  shops: String
  site: String
  siteen: String
  sitefr: String
  sitenl: String
  socialMedia: SocialMediaUpdateManyWithoutProviderInput
  street: String
  test: String
  testJson: String
  tva: String
  verified: Boolean
  widgetId: String
  zip: String
}

input ProviderUpdateWithWhereUniqueWithoutCategoryInput {
  where: ProviderWhereUniqueInput!
  data: ProviderUpdateWithoutCategoryDataInput!
}

input ProviderUpdateWithWhereUniqueWithoutPriceCategoryInput {
  where: ProviderWhereUniqueInput!
  data: ProviderUpdateWithoutPriceCategoryDataInput!
}

input ProviderUpdateWithWhereUniqueWithoutUserInput {
  where: ProviderWhereUniqueInput!
  data: ProviderUpdateWithoutUserDataInput!
}

input ProviderUpsertWithoutContractInput {
  update: ProviderUpdateWithoutContractDataInput!
  create: ProviderCreateWithoutContractInput!
}

input ProviderUpsertWithoutReviewInput {
  update: ProviderUpdateWithoutReviewDataInput!
  create: ProviderCreateWithoutReviewInput!
}

input ProviderUpsertWithoutSocialMediaInput {
  update: ProviderUpdateWithoutSocialMediaDataInput!
  create: ProviderCreateWithoutSocialMediaInput!
}

input ProviderUpsertWithWhereUniqueWithoutCategoryInput {
  where: ProviderWhereUniqueInput!
  update: ProviderUpdateWithoutCategoryDataInput!
  create: ProviderCreateWithoutCategoryInput!
}

input ProviderUpsertWithWhereUniqueWithoutPriceCategoryInput {
  where: ProviderWhereUniqueInput!
  update: ProviderUpdateWithoutPriceCategoryDataInput!
  create: ProviderCreateWithoutPriceCategoryInput!
}

input ProviderUpsertWithWhereUniqueWithoutUserInput {
  where: ProviderWhereUniqueInput!
  update: ProviderUpdateWithoutUserDataInput!
  create: ProviderCreateWithoutUserInput!
}

input ProviderWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  address: String
  address_not: String
  address_in: [String!]
  address_not_in: [String!]
  address_lt: String
  address_lte: String
  address_gt: String
  address_gte: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  category_every: CategoryWhereInput
  category_some: CategoryWhereInput
  category_none: CategoryWhereInput
  city: String
  city_not: String
  city_in: [String!]
  city_not_in: [String!]
  city_lt: String
  city_lte: String
  city_gt: String
  city_gte: String
  city_contains: String
  city_not_contains: String
  city_starts_with: String
  city_not_starts_with: String
  city_ends_with: String
  city_not_ends_with: String
  contact: String
  contact_not: String
  contact_in: [String!]
  contact_not_in: [String!]
  contact_lt: String
  contact_lte: String
  contact_gt: String
  contact_gte: String
  contact_contains: String
  contact_not_contains: String
  contact_starts_with: String
  contact_not_starts_with: String
  contact_ends_with: String
  contact_not_ends_with: String
  contactEmail: String
  contactEmail_not: String
  contactEmail_in: [String!]
  contactEmail_not_in: [String!]
  contactEmail_lt: String
  contactEmail_lte: String
  contactEmail_gt: String
  contactEmail_gte: String
  contactEmail_contains: String
  contactEmail_not_contains: String
  contactEmail_starts_with: String
  contactEmail_not_starts_with: String
  contactEmail_ends_with: String
  contactEmail_not_ends_with: String
  contacten: String
  contacten_not: String
  contacten_in: [String!]
  contacten_not_in: [String!]
  contacten_lt: String
  contacten_lte: String
  contacten_gt: String
  contacten_gte: String
  contacten_contains: String
  contacten_not_contains: String
  contacten_starts_with: String
  contacten_not_starts_with: String
  contacten_ends_with: String
  contacten_not_ends_with: String
  contactfr: String
  contactfr_not: String
  contactfr_in: [String!]
  contactfr_not_in: [String!]
  contactfr_lt: String
  contactfr_lte: String
  contactfr_gt: String
  contactfr_gte: String
  contactfr_contains: String
  contactfr_not_contains: String
  contactfr_starts_with: String
  contactfr_not_starts_with: String
  contactfr_ends_with: String
  contactfr_not_ends_with: String
  contactnl: String
  contactnl_not: String
  contactnl_in: [String!]
  contactnl_not_in: [String!]
  contactnl_lt: String
  contactnl_lte: String
  contactnl_gt: String
  contactnl_gte: String
  contactnl_contains: String
  contactnl_not_contains: String
  contactnl_starts_with: String
  contactnl_not_starts_with: String
  contactnl_ends_with: String
  contactnl_not_ends_with: String
  contract_every: ContractWhereInput
  contract_some: ContractWhereInput
  contract_none: ContractWhereInput
  countryId: Int
  countryId_not: Int
  countryId_in: [Int!]
  countryId_not_in: [Int!]
  countryId_lt: Int
  countryId_lte: Int
  countryId_gt: Int
  countryId_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  emailen: String
  emailen_not: String
  emailen_in: [String!]
  emailen_not_in: [String!]
  emailen_lt: String
  emailen_lte: String
  emailen_gt: String
  emailen_gte: String
  emailen_contains: String
  emailen_not_contains: String
  emailen_starts_with: String
  emailen_not_starts_with: String
  emailen_ends_with: String
  emailen_not_ends_with: String
  emailfr: String
  emailfr_not: String
  emailfr_in: [String!]
  emailfr_not_in: [String!]
  emailfr_lt: String
  emailfr_lte: String
  emailfr_gt: String
  emailfr_gte: String
  emailfr_contains: String
  emailfr_not_contains: String
  emailfr_starts_with: String
  emailfr_not_starts_with: String
  emailfr_ends_with: String
  emailfr_not_ends_with: String
  emailnl: String
  emailnl_not: String
  emailnl_in: [String!]
  emailnl_not_in: [String!]
  emailnl_lt: String
  emailnl_lte: String
  emailnl_gt: String
  emailnl_gte: String
  emailnl_contains: String
  emailnl_not_contains: String
  emailnl_starts_with: String
  emailnl_not_starts_with: String
  emailnl_ends_with: String
  emailnl_not_ends_with: String
  faq: String
  faq_not: String
  faq_in: [String!]
  faq_not_in: [String!]
  faq_lt: String
  faq_lte: String
  faq_gt: String
  faq_gte: String
  faq_contains: String
  faq_not_contains: String
  faq_starts_with: String
  faq_not_starts_with: String
  faq_ends_with: String
  faq_not_ends_with: String
  faqen: String
  faqen_not: String
  faqen_in: [String!]
  faqen_not_in: [String!]
  faqen_lt: String
  faqen_lte: String
  faqen_gt: String
  faqen_gte: String
  faqen_contains: String
  faqen_not_contains: String
  faqen_starts_with: String
  faqen_not_starts_with: String
  faqen_ends_with: String
  faqen_not_ends_with: String
  faqfr: String
  faqfr_not: String
  faqfr_in: [String!]
  faqfr_not_in: [String!]
  faqfr_lt: String
  faqfr_lte: String
  faqfr_gt: String
  faqfr_gte: String
  faqfr_contains: String
  faqfr_not_contains: String
  faqfr_starts_with: String
  faqfr_not_starts_with: String
  faqfr_ends_with: String
  faqfr_not_ends_with: String
  faqnl: String
  faqnl_not: String
  faqnl_in: [String!]
  faqnl_not_in: [String!]
  faqnl_lt: String
  faqnl_lte: String
  faqnl_gt: String
  faqnl_gte: String
  faqnl_contains: String
  faqnl_not_contains: String
  faqnl_starts_with: String
  faqnl_not_starts_with: String
  faqnl_ends_with: String
  faqnl_not_ends_with: String
  login: String
  login_not: String
  login_in: [String!]
  login_not_in: [String!]
  login_lt: String
  login_lte: String
  login_gt: String
  login_gte: String
  login_contains: String
  login_not_contains: String
  login_starts_with: String
  login_not_starts_with: String
  login_ends_with: String
  login_not_ends_with: String
  loginen: String
  loginen_not: String
  loginen_in: [String!]
  loginen_not_in: [String!]
  loginen_lt: String
  loginen_lte: String
  loginen_gt: String
  loginen_gte: String
  loginen_contains: String
  loginen_not_contains: String
  loginen_starts_with: String
  loginen_not_starts_with: String
  loginen_ends_with: String
  loginen_not_ends_with: String
  loginfr: String
  loginfr_not: String
  loginfr_in: [String!]
  loginfr_not_in: [String!]
  loginfr_lt: String
  loginfr_lte: String
  loginfr_gt: String
  loginfr_gte: String
  loginfr_contains: String
  loginfr_not_contains: String
  loginfr_starts_with: String
  loginfr_not_starts_with: String
  loginfr_ends_with: String
  loginfr_not_ends_with: String
  loginnl: String
  loginnl_not: String
  loginnl_in: [String!]
  loginnl_not_in: [String!]
  loginnl_lt: String
  loginnl_lte: String
  loginnl_gt: String
  loginnl_gte: String
  loginnl_contains: String
  loginnl_not_contains: String
  loginnl_starts_with: String
  loginnl_not_starts_with: String
  loginnl_ends_with: String
  loginnl_not_ends_with: String
  logo: String
  logo_not: String
  logo_in: [String!]
  logo_not_in: [String!]
  logo_lt: String
  logo_lte: String
  logo_gt: String
  logo_gte: String
  logo_contains: String
  logo_not_contains: String
  logo_starts_with: String
  logo_not_starts_with: String
  logo_ends_with: String
  logo_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phoneen: String
  phoneen_not: String
  phoneen_in: [String!]
  phoneen_not_in: [String!]
  phoneen_lt: String
  phoneen_lte: String
  phoneen_gt: String
  phoneen_gte: String
  phoneen_contains: String
  phoneen_not_contains: String
  phoneen_starts_with: String
  phoneen_not_starts_with: String
  phoneen_ends_with: String
  phoneen_not_ends_with: String
  phonefr: String
  phonefr_not: String
  phonefr_in: [String!]
  phonefr_not_in: [String!]
  phonefr_lt: String
  phonefr_lte: String
  phonefr_gt: String
  phonefr_gte: String
  phonefr_contains: String
  phonefr_not_contains: String
  phonefr_starts_with: String
  phonefr_not_starts_with: String
  phonefr_ends_with: String
  phonefr_not_ends_with: String
  phonenl: String
  phonenl_not: String
  phonenl_in: [String!]
  phonenl_not_in: [String!]
  phonenl_lt: String
  phonenl_lte: String
  phonenl_gt: String
  phonenl_gte: String
  phonenl_contains: String
  phonenl_not_contains: String
  phonenl_starts_with: String
  phonenl_not_starts_with: String
  phonenl_ends_with: String
  phonenl_not_ends_with: String
  priceCategory: PriceCategoryWhereInput
  pricingAVG: Float
  pricingAVG_not: Float
  pricingAVG_in: [Float!]
  pricingAVG_not_in: [Float!]
  pricingAVG_lt: Float
  pricingAVG_lte: Float
  pricingAVG_gt: Float
  pricingAVG_gte: Float
  ratingAVG: Float
  ratingAVG_not: Float
  ratingAVG_in: [Float!]
  ratingAVG_not_in: [Float!]
  ratingAVG_lt: Float
  ratingAVG_lte: Float
  ratingAVG_gt: Float
  ratingAVG_gte: Float
  review_every: ReviewWhereInput
  review_some: ReviewWhereInput
  review_none: ReviewWhereInput
  shops: String
  shops_not: String
  shops_in: [String!]
  shops_not_in: [String!]
  shops_lt: String
  shops_lte: String
  shops_gt: String
  shops_gte: String
  shops_contains: String
  shops_not_contains: String
  shops_starts_with: String
  shops_not_starts_with: String
  shops_ends_with: String
  shops_not_ends_with: String
  site: String
  site_not: String
  site_in: [String!]
  site_not_in: [String!]
  site_lt: String
  site_lte: String
  site_gt: String
  site_gte: String
  site_contains: String
  site_not_contains: String
  site_starts_with: String
  site_not_starts_with: String
  site_ends_with: String
  site_not_ends_with: String
  siteen: String
  siteen_not: String
  siteen_in: [String!]
  siteen_not_in: [String!]
  siteen_lt: String
  siteen_lte: String
  siteen_gt: String
  siteen_gte: String
  siteen_contains: String
  siteen_not_contains: String
  siteen_starts_with: String
  siteen_not_starts_with: String
  siteen_ends_with: String
  siteen_not_ends_with: String
  sitefr: String
  sitefr_not: String
  sitefr_in: [String!]
  sitefr_not_in: [String!]
  sitefr_lt: String
  sitefr_lte: String
  sitefr_gt: String
  sitefr_gte: String
  sitefr_contains: String
  sitefr_not_contains: String
  sitefr_starts_with: String
  sitefr_not_starts_with: String
  sitefr_ends_with: String
  sitefr_not_ends_with: String
  sitenl: String
  sitenl_not: String
  sitenl_in: [String!]
  sitenl_not_in: [String!]
  sitenl_lt: String
  sitenl_lte: String
  sitenl_gt: String
  sitenl_gte: String
  sitenl_contains: String
  sitenl_not_contains: String
  sitenl_starts_with: String
  sitenl_not_starts_with: String
  sitenl_ends_with: String
  sitenl_not_ends_with: String
  socialMedia_every: SocialMediaWhereInput
  socialMedia_some: SocialMediaWhereInput
  socialMedia_none: SocialMediaWhereInput
  street: String
  street_not: String
  street_in: [String!]
  street_not_in: [String!]
  street_lt: String
  street_lte: String
  street_gt: String
  street_gte: String
  street_contains: String
  street_not_contains: String
  street_starts_with: String
  street_not_starts_with: String
  street_ends_with: String
  street_not_ends_with: String
  test: String
  test_not: String
  test_in: [String!]
  test_not_in: [String!]
  test_lt: String
  test_lte: String
  test_gt: String
  test_gte: String
  test_contains: String
  test_not_contains: String
  test_starts_with: String
  test_not_starts_with: String
  test_ends_with: String
  test_not_ends_with: String
  testJson: String
  testJson_not: String
  testJson_in: [String!]
  testJson_not_in: [String!]
  testJson_lt: String
  testJson_lte: String
  testJson_gt: String
  testJson_gte: String
  testJson_contains: String
  testJson_not_contains: String
  testJson_starts_with: String
  testJson_not_starts_with: String
  testJson_ends_with: String
  testJson_not_ends_with: String
  tva: String
  tva_not: String
  tva_in: [String!]
  tva_not_in: [String!]
  tva_lt: String
  tva_lte: String
  tva_gt: String
  tva_gte: String
  tva_contains: String
  tva_not_contains: String
  tva_starts_with: String
  tva_not_starts_with: String
  tva_ends_with: String
  tva_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  user_every: UserWhereInput
  user_some: UserWhereInput
  user_none: UserWhereInput
  verified: Boolean
  verified_not: Boolean
  widgetId: String
  widgetId_not: String
  widgetId_in: [String!]
  widgetId_not_in: [String!]
  widgetId_lt: String
  widgetId_lte: String
  widgetId_gt: String
  widgetId_gte: String
  widgetId_contains: String
  widgetId_not_contains: String
  widgetId_starts_with: String
  widgetId_not_starts_with: String
  widgetId_ends_with: String
  widgetId_not_ends_with: String
  zip: String
  zip_not: String
  zip_in: [String!]
  zip_not_in: [String!]
  zip_lt: String
  zip_lte: String
  zip_gt: String
  zip_gte: String
  zip_contains: String
  zip_not_contains: String
  zip_starts_with: String
  zip_not_starts_with: String
  zip_ends_with: String
  zip_not_ends_with: String
  AND: [ProviderWhereInput!]
  OR: [ProviderWhereInput!]
  NOT: [ProviderWhereInput!]
}

input ProviderWhereUniqueInput {
  id: Int
  name: String
}

type Query {
  category(where: CategoryWhereUniqueInput!): Category
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category]!
  categoriesConnection(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CategoryConnection!
  contract(where: ContractWhereUniqueInput!): Contract
  contracts(where: ContractWhereInput, orderBy: ContractOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Contract]!
  contractsConnection(where: ContractWhereInput, orderBy: ContractOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ContractConnection!
  customer(where: CustomerWhereUniqueInput!): Customer
  customers(where: CustomerWhereInput, orderBy: CustomerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Customer]!
  customersConnection(where: CustomerWhereInput, orderBy: CustomerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CustomerConnection!
  newsletter(where: NewsletterWhereUniqueInput!): Newsletter
  newsletters(where: NewsletterWhereInput, orderBy: NewsletterOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Newsletter]!
  newslettersConnection(where: NewsletterWhereInput, orderBy: NewsletterOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NewsletterConnection!
  priceCategory(where: PriceCategoryWhereUniqueInput!): PriceCategory
  priceCategories(where: PriceCategoryWhereInput, orderBy: PriceCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PriceCategory]!
  priceCategoriesConnection(where: PriceCategoryWhereInput, orderBy: PriceCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PriceCategoryConnection!
  provider(where: ProviderWhereUniqueInput!): Provider
  providers(where: ProviderWhereInput, orderBy: ProviderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Provider]!
  providersConnection(where: ProviderWhereInput, orderBy: ProviderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProviderConnection!
  review(where: ReviewWhereUniqueInput!): Review
  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review]!
  reviewsConnection(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReviewConnection!
  socialMedia(where: SocialMediaWhereUniqueInput!): SocialMedia
  socialMedias(where: SocialMediaWhereInput, orderBy: SocialMediaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SocialMedia]!
  socialMediasConnection(where: SocialMediaWhereInput, orderBy: SocialMediaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SocialMediaConnection!
  subCategory(where: SubCategoryWhereUniqueInput!): SubCategory
  subCategories(where: SubCategoryWhereInput, orderBy: SubCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SubCategory]!
  subCategoriesConnection(where: SubCategoryWhereInput, orderBy: SubCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SubCategoryConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type Review {
  id: Int!
  author: Customer
  content: String!
  contentEn: String
  contentFr: String
  contentNl: String
  createdAt: DateTime
  originalLang: String
  pricing: Int
  provider: Provider
  rating: Int!
  reply: String
  replyCreatedAt: DateTime
  replyEn: String
  replyFr: String
  replyNl: String
  replyOriginal: String
  title: String!
  titleEn: String
  titleFr: String
  titleNl: String
  updatedAt: DateTime
  upvote: Int
  userId: String
}

type ReviewConnection {
  pageInfo: PageInfo!
  edges: [ReviewEdge]!
  aggregate: AggregateReview!
}

input ReviewCreateInput {
  author: CustomerCreateOneWithoutReviewInput
  content: String!
  contentEn: String
  contentFr: String
  contentNl: String
  originalLang: String
  pricing: Int
  provider: ProviderCreateOneWithoutReviewInput
  rating: Int!
  reply: String
  replyCreatedAt: DateTime
  replyEn: String
  replyFr: String
  replyNl: String
  replyOriginal: String
  title: String!
  titleEn: String
  titleFr: String
  titleNl: String
  upvote: Int
  userId: String
}

input ReviewCreateManyWithoutAuthorInput {
  create: [ReviewCreateWithoutAuthorInput!]
  connect: [ReviewWhereUniqueInput!]
}

input ReviewCreateManyWithoutProviderInput {
  create: [ReviewCreateWithoutProviderInput!]
  connect: [ReviewWhereUniqueInput!]
}

input ReviewCreateWithoutAuthorInput {
  content: String!
  contentEn: String
  contentFr: String
  contentNl: String
  originalLang: String
  pricing: Int
  provider: ProviderCreateOneWithoutReviewInput
  rating: Int!
  reply: String
  replyCreatedAt: DateTime
  replyEn: String
  replyFr: String
  replyNl: String
  replyOriginal: String
  title: String!
  titleEn: String
  titleFr: String
  titleNl: String
  upvote: Int
  userId: String
}

input ReviewCreateWithoutProviderInput {
  author: CustomerCreateOneWithoutReviewInput
  content: String!
  contentEn: String
  contentFr: String
  contentNl: String
  originalLang: String
  pricing: Int
  rating: Int!
  reply: String
  replyCreatedAt: DateTime
  replyEn: String
  replyFr: String
  replyNl: String
  replyOriginal: String
  title: String!
  titleEn: String
  titleFr: String
  titleNl: String
  upvote: Int
  userId: String
}

type ReviewEdge {
  node: Review!
  cursor: String!
}

enum ReviewOrderByInput {
  id_ASC
  id_DESC
  content_ASC
  content_DESC
  contentEn_ASC
  contentEn_DESC
  contentFr_ASC
  contentFr_DESC
  contentNl_ASC
  contentNl_DESC
  createdAt_ASC
  createdAt_DESC
  originalLang_ASC
  originalLang_DESC
  pricing_ASC
  pricing_DESC
  rating_ASC
  rating_DESC
  reply_ASC
  reply_DESC
  replyCreatedAt_ASC
  replyCreatedAt_DESC
  replyEn_ASC
  replyEn_DESC
  replyFr_ASC
  replyFr_DESC
  replyNl_ASC
  replyNl_DESC
  replyOriginal_ASC
  replyOriginal_DESC
  title_ASC
  title_DESC
  titleEn_ASC
  titleEn_DESC
  titleFr_ASC
  titleFr_DESC
  titleNl_ASC
  titleNl_DESC
  updatedAt_ASC
  updatedAt_DESC
  upvote_ASC
  upvote_DESC
  userId_ASC
  userId_DESC
}

type ReviewPreviousValues {
  id: Int!
  content: String!
  contentEn: String
  contentFr: String
  contentNl: String
  createdAt: DateTime
  originalLang: String
  pricing: Int
  rating: Int!
  reply: String
  replyCreatedAt: DateTime
  replyEn: String
  replyFr: String
  replyNl: String
  replyOriginal: String
  title: String!
  titleEn: String
  titleFr: String
  titleNl: String
  updatedAt: DateTime
  upvote: Int
  userId: String
}

input ReviewScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  contentEn: String
  contentEn_not: String
  contentEn_in: [String!]
  contentEn_not_in: [String!]
  contentEn_lt: String
  contentEn_lte: String
  contentEn_gt: String
  contentEn_gte: String
  contentEn_contains: String
  contentEn_not_contains: String
  contentEn_starts_with: String
  contentEn_not_starts_with: String
  contentEn_ends_with: String
  contentEn_not_ends_with: String
  contentFr: String
  contentFr_not: String
  contentFr_in: [String!]
  contentFr_not_in: [String!]
  contentFr_lt: String
  contentFr_lte: String
  contentFr_gt: String
  contentFr_gte: String
  contentFr_contains: String
  contentFr_not_contains: String
  contentFr_starts_with: String
  contentFr_not_starts_with: String
  contentFr_ends_with: String
  contentFr_not_ends_with: String
  contentNl: String
  contentNl_not: String
  contentNl_in: [String!]
  contentNl_not_in: [String!]
  contentNl_lt: String
  contentNl_lte: String
  contentNl_gt: String
  contentNl_gte: String
  contentNl_contains: String
  contentNl_not_contains: String
  contentNl_starts_with: String
  contentNl_not_starts_with: String
  contentNl_ends_with: String
  contentNl_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  originalLang: String
  originalLang_not: String
  originalLang_in: [String!]
  originalLang_not_in: [String!]
  originalLang_lt: String
  originalLang_lte: String
  originalLang_gt: String
  originalLang_gte: String
  originalLang_contains: String
  originalLang_not_contains: String
  originalLang_starts_with: String
  originalLang_not_starts_with: String
  originalLang_ends_with: String
  originalLang_not_ends_with: String
  pricing: Int
  pricing_not: Int
  pricing_in: [Int!]
  pricing_not_in: [Int!]
  pricing_lt: Int
  pricing_lte: Int
  pricing_gt: Int
  pricing_gte: Int
  rating: Int
  rating_not: Int
  rating_in: [Int!]
  rating_not_in: [Int!]
  rating_lt: Int
  rating_lte: Int
  rating_gt: Int
  rating_gte: Int
  reply: String
  reply_not: String
  reply_in: [String!]
  reply_not_in: [String!]
  reply_lt: String
  reply_lte: String
  reply_gt: String
  reply_gte: String
  reply_contains: String
  reply_not_contains: String
  reply_starts_with: String
  reply_not_starts_with: String
  reply_ends_with: String
  reply_not_ends_with: String
  replyCreatedAt: DateTime
  replyCreatedAt_not: DateTime
  replyCreatedAt_in: [DateTime!]
  replyCreatedAt_not_in: [DateTime!]
  replyCreatedAt_lt: DateTime
  replyCreatedAt_lte: DateTime
  replyCreatedAt_gt: DateTime
  replyCreatedAt_gte: DateTime
  replyEn: String
  replyEn_not: String
  replyEn_in: [String!]
  replyEn_not_in: [String!]
  replyEn_lt: String
  replyEn_lte: String
  replyEn_gt: String
  replyEn_gte: String
  replyEn_contains: String
  replyEn_not_contains: String
  replyEn_starts_with: String
  replyEn_not_starts_with: String
  replyEn_ends_with: String
  replyEn_not_ends_with: String
  replyFr: String
  replyFr_not: String
  replyFr_in: [String!]
  replyFr_not_in: [String!]
  replyFr_lt: String
  replyFr_lte: String
  replyFr_gt: String
  replyFr_gte: String
  replyFr_contains: String
  replyFr_not_contains: String
  replyFr_starts_with: String
  replyFr_not_starts_with: String
  replyFr_ends_with: String
  replyFr_not_ends_with: String
  replyNl: String
  replyNl_not: String
  replyNl_in: [String!]
  replyNl_not_in: [String!]
  replyNl_lt: String
  replyNl_lte: String
  replyNl_gt: String
  replyNl_gte: String
  replyNl_contains: String
  replyNl_not_contains: String
  replyNl_starts_with: String
  replyNl_not_starts_with: String
  replyNl_ends_with: String
  replyNl_not_ends_with: String
  replyOriginal: String
  replyOriginal_not: String
  replyOriginal_in: [String!]
  replyOriginal_not_in: [String!]
  replyOriginal_lt: String
  replyOriginal_lte: String
  replyOriginal_gt: String
  replyOriginal_gte: String
  replyOriginal_contains: String
  replyOriginal_not_contains: String
  replyOriginal_starts_with: String
  replyOriginal_not_starts_with: String
  replyOriginal_ends_with: String
  replyOriginal_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  titleEn: String
  titleEn_not: String
  titleEn_in: [String!]
  titleEn_not_in: [String!]
  titleEn_lt: String
  titleEn_lte: String
  titleEn_gt: String
  titleEn_gte: String
  titleEn_contains: String
  titleEn_not_contains: String
  titleEn_starts_with: String
  titleEn_not_starts_with: String
  titleEn_ends_with: String
  titleEn_not_ends_with: String
  titleFr: String
  titleFr_not: String
  titleFr_in: [String!]
  titleFr_not_in: [String!]
  titleFr_lt: String
  titleFr_lte: String
  titleFr_gt: String
  titleFr_gte: String
  titleFr_contains: String
  titleFr_not_contains: String
  titleFr_starts_with: String
  titleFr_not_starts_with: String
  titleFr_ends_with: String
  titleFr_not_ends_with: String
  titleNl: String
  titleNl_not: String
  titleNl_in: [String!]
  titleNl_not_in: [String!]
  titleNl_lt: String
  titleNl_lte: String
  titleNl_gt: String
  titleNl_gte: String
  titleNl_contains: String
  titleNl_not_contains: String
  titleNl_starts_with: String
  titleNl_not_starts_with: String
  titleNl_ends_with: String
  titleNl_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  upvote: Int
  upvote_not: Int
  upvote_in: [Int!]
  upvote_not_in: [Int!]
  upvote_lt: Int
  upvote_lte: Int
  upvote_gt: Int
  upvote_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ReviewScalarWhereInput!]
  OR: [ReviewScalarWhereInput!]
  NOT: [ReviewScalarWhereInput!]
}

type ReviewSubscriptionPayload {
  mutation: MutationType!
  node: Review
  updatedFields: [String!]
  previousValues: ReviewPreviousValues
}

input ReviewSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ReviewWhereInput
  AND: [ReviewSubscriptionWhereInput!]
  OR: [ReviewSubscriptionWhereInput!]
  NOT: [ReviewSubscriptionWhereInput!]
}

input ReviewUpdateInput {
  author: CustomerUpdateOneWithoutReviewInput
  content: String
  contentEn: String
  contentFr: String
  contentNl: String
  originalLang: String
  pricing: Int
  provider: ProviderUpdateOneWithoutReviewInput
  rating: Int
  reply: String
  replyCreatedAt: DateTime
  replyEn: String
  replyFr: String
  replyNl: String
  replyOriginal: String
  title: String
  titleEn: String
  titleFr: String
  titleNl: String
  upvote: Int
  userId: String
}

input ReviewUpdateManyDataInput {
  content: String
  contentEn: String
  contentFr: String
  contentNl: String
  originalLang: String
  pricing: Int
  rating: Int
  reply: String
  replyCreatedAt: DateTime
  replyEn: String
  replyFr: String
  replyNl: String
  replyOriginal: String
  title: String
  titleEn: String
  titleFr: String
  titleNl: String
  upvote: Int
  userId: String
}

input ReviewUpdateManyMutationInput {
  content: String
  contentEn: String
  contentFr: String
  contentNl: String
  originalLang: String
  pricing: Int
  rating: Int
  reply: String
  replyCreatedAt: DateTime
  replyEn: String
  replyFr: String
  replyNl: String
  replyOriginal: String
  title: String
  titleEn: String
  titleFr: String
  titleNl: String
  upvote: Int
  userId: String
}

input ReviewUpdateManyWithoutAuthorInput {
  create: [ReviewCreateWithoutAuthorInput!]
  delete: [ReviewWhereUniqueInput!]
  connect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  disconnect: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutAuthorInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutAuthorInput!]
  deleteMany: [ReviewScalarWhereInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
}

input ReviewUpdateManyWithoutProviderInput {
  create: [ReviewCreateWithoutProviderInput!]
  delete: [ReviewWhereUniqueInput!]
  connect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  disconnect: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutProviderInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutProviderInput!]
  deleteMany: [ReviewScalarWhereInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
}

input ReviewUpdateManyWithWhereNestedInput {
  where: ReviewScalarWhereInput!
  data: ReviewUpdateManyDataInput!
}

input ReviewUpdateWithoutAuthorDataInput {
  content: String
  contentEn: String
  contentFr: String
  contentNl: String
  originalLang: String
  pricing: Int
  provider: ProviderUpdateOneWithoutReviewInput
  rating: Int
  reply: String
  replyCreatedAt: DateTime
  replyEn: String
  replyFr: String
  replyNl: String
  replyOriginal: String
  title: String
  titleEn: String
  titleFr: String
  titleNl: String
  upvote: Int
  userId: String
}

input ReviewUpdateWithoutProviderDataInput {
  author: CustomerUpdateOneWithoutReviewInput
  content: String
  contentEn: String
  contentFr: String
  contentNl: String
  originalLang: String
  pricing: Int
  rating: Int
  reply: String
  replyCreatedAt: DateTime
  replyEn: String
  replyFr: String
  replyNl: String
  replyOriginal: String
  title: String
  titleEn: String
  titleFr: String
  titleNl: String
  upvote: Int
  userId: String
}

input ReviewUpdateWithWhereUniqueWithoutAuthorInput {
  where: ReviewWhereUniqueInput!
  data: ReviewUpdateWithoutAuthorDataInput!
}

input ReviewUpdateWithWhereUniqueWithoutProviderInput {
  where: ReviewWhereUniqueInput!
  data: ReviewUpdateWithoutProviderDataInput!
}

input ReviewUpsertWithWhereUniqueWithoutAuthorInput {
  where: ReviewWhereUniqueInput!
  update: ReviewUpdateWithoutAuthorDataInput!
  create: ReviewCreateWithoutAuthorInput!
}

input ReviewUpsertWithWhereUniqueWithoutProviderInput {
  where: ReviewWhereUniqueInput!
  update: ReviewUpdateWithoutProviderDataInput!
  create: ReviewCreateWithoutProviderInput!
}

input ReviewWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  author: CustomerWhereInput
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  contentEn: String
  contentEn_not: String
  contentEn_in: [String!]
  contentEn_not_in: [String!]
  contentEn_lt: String
  contentEn_lte: String
  contentEn_gt: String
  contentEn_gte: String
  contentEn_contains: String
  contentEn_not_contains: String
  contentEn_starts_with: String
  contentEn_not_starts_with: String
  contentEn_ends_with: String
  contentEn_not_ends_with: String
  contentFr: String
  contentFr_not: String
  contentFr_in: [String!]
  contentFr_not_in: [String!]
  contentFr_lt: String
  contentFr_lte: String
  contentFr_gt: String
  contentFr_gte: String
  contentFr_contains: String
  contentFr_not_contains: String
  contentFr_starts_with: String
  contentFr_not_starts_with: String
  contentFr_ends_with: String
  contentFr_not_ends_with: String
  contentNl: String
  contentNl_not: String
  contentNl_in: [String!]
  contentNl_not_in: [String!]
  contentNl_lt: String
  contentNl_lte: String
  contentNl_gt: String
  contentNl_gte: String
  contentNl_contains: String
  contentNl_not_contains: String
  contentNl_starts_with: String
  contentNl_not_starts_with: String
  contentNl_ends_with: String
  contentNl_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  originalLang: String
  originalLang_not: String
  originalLang_in: [String!]
  originalLang_not_in: [String!]
  originalLang_lt: String
  originalLang_lte: String
  originalLang_gt: String
  originalLang_gte: String
  originalLang_contains: String
  originalLang_not_contains: String
  originalLang_starts_with: String
  originalLang_not_starts_with: String
  originalLang_ends_with: String
  originalLang_not_ends_with: String
  pricing: Int
  pricing_not: Int
  pricing_in: [Int!]
  pricing_not_in: [Int!]
  pricing_lt: Int
  pricing_lte: Int
  pricing_gt: Int
  pricing_gte: Int
  provider: ProviderWhereInput
  rating: Int
  rating_not: Int
  rating_in: [Int!]
  rating_not_in: [Int!]
  rating_lt: Int
  rating_lte: Int
  rating_gt: Int
  rating_gte: Int
  reply: String
  reply_not: String
  reply_in: [String!]
  reply_not_in: [String!]
  reply_lt: String
  reply_lte: String
  reply_gt: String
  reply_gte: String
  reply_contains: String
  reply_not_contains: String
  reply_starts_with: String
  reply_not_starts_with: String
  reply_ends_with: String
  reply_not_ends_with: String
  replyCreatedAt: DateTime
  replyCreatedAt_not: DateTime
  replyCreatedAt_in: [DateTime!]
  replyCreatedAt_not_in: [DateTime!]
  replyCreatedAt_lt: DateTime
  replyCreatedAt_lte: DateTime
  replyCreatedAt_gt: DateTime
  replyCreatedAt_gte: DateTime
  replyEn: String
  replyEn_not: String
  replyEn_in: [String!]
  replyEn_not_in: [String!]
  replyEn_lt: String
  replyEn_lte: String
  replyEn_gt: String
  replyEn_gte: String
  replyEn_contains: String
  replyEn_not_contains: String
  replyEn_starts_with: String
  replyEn_not_starts_with: String
  replyEn_ends_with: String
  replyEn_not_ends_with: String
  replyFr: String
  replyFr_not: String
  replyFr_in: [String!]
  replyFr_not_in: [String!]
  replyFr_lt: String
  replyFr_lte: String
  replyFr_gt: String
  replyFr_gte: String
  replyFr_contains: String
  replyFr_not_contains: String
  replyFr_starts_with: String
  replyFr_not_starts_with: String
  replyFr_ends_with: String
  replyFr_not_ends_with: String
  replyNl: String
  replyNl_not: String
  replyNl_in: [String!]
  replyNl_not_in: [String!]
  replyNl_lt: String
  replyNl_lte: String
  replyNl_gt: String
  replyNl_gte: String
  replyNl_contains: String
  replyNl_not_contains: String
  replyNl_starts_with: String
  replyNl_not_starts_with: String
  replyNl_ends_with: String
  replyNl_not_ends_with: String
  replyOriginal: String
  replyOriginal_not: String
  replyOriginal_in: [String!]
  replyOriginal_not_in: [String!]
  replyOriginal_lt: String
  replyOriginal_lte: String
  replyOriginal_gt: String
  replyOriginal_gte: String
  replyOriginal_contains: String
  replyOriginal_not_contains: String
  replyOriginal_starts_with: String
  replyOriginal_not_starts_with: String
  replyOriginal_ends_with: String
  replyOriginal_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  titleEn: String
  titleEn_not: String
  titleEn_in: [String!]
  titleEn_not_in: [String!]
  titleEn_lt: String
  titleEn_lte: String
  titleEn_gt: String
  titleEn_gte: String
  titleEn_contains: String
  titleEn_not_contains: String
  titleEn_starts_with: String
  titleEn_not_starts_with: String
  titleEn_ends_with: String
  titleEn_not_ends_with: String
  titleFr: String
  titleFr_not: String
  titleFr_in: [String!]
  titleFr_not_in: [String!]
  titleFr_lt: String
  titleFr_lte: String
  titleFr_gt: String
  titleFr_gte: String
  titleFr_contains: String
  titleFr_not_contains: String
  titleFr_starts_with: String
  titleFr_not_starts_with: String
  titleFr_ends_with: String
  titleFr_not_ends_with: String
  titleNl: String
  titleNl_not: String
  titleNl_in: [String!]
  titleNl_not_in: [String!]
  titleNl_lt: String
  titleNl_lte: String
  titleNl_gt: String
  titleNl_gte: String
  titleNl_contains: String
  titleNl_not_contains: String
  titleNl_starts_with: String
  titleNl_not_starts_with: String
  titleNl_ends_with: String
  titleNl_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  upvote: Int
  upvote_not: Int
  upvote_in: [Int!]
  upvote_not_in: [Int!]
  upvote_lt: Int
  upvote_lte: Int
  upvote_gt: Int
  upvote_gte: Int
  userId: String
  userId_not: String
  userId_in: [String!]
  userId_not_in: [String!]
  userId_lt: String
  userId_lte: String
  userId_gt: String
  userId_gte: String
  userId_contains: String
  userId_not_contains: String
  userId_starts_with: String
  userId_not_starts_with: String
  userId_ends_with: String
  userId_not_ends_with: String
  AND: [ReviewWhereInput!]
  OR: [ReviewWhereInput!]
  NOT: [ReviewWhereInput!]
}

input ReviewWhereUniqueInput {
  id: Int
}

type SocialMedia {
  id: Int!
  createdAt: DateTime
  facebook: String
  linkedin: String
  provider: Provider
  twitter: String
  updatedAt: DateTime
}

type SocialMediaConnection {
  pageInfo: PageInfo!
  edges: [SocialMediaEdge]!
  aggregate: AggregateSocialMedia!
}

input SocialMediaCreateInput {
  facebook: String
  linkedin: String
  provider: ProviderCreateOneWithoutSocialMediaInput
  twitter: String
}

input SocialMediaCreateManyWithoutProviderInput {
  create: [SocialMediaCreateWithoutProviderInput!]
  connect: [SocialMediaWhereUniqueInput!]
}

input SocialMediaCreateWithoutProviderInput {
  facebook: String
  linkedin: String
  twitter: String
}

type SocialMediaEdge {
  node: SocialMedia!
  cursor: String!
}

enum SocialMediaOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  facebook_ASC
  facebook_DESC
  linkedin_ASC
  linkedin_DESC
  twitter_ASC
  twitter_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type SocialMediaPreviousValues {
  id: Int!
  createdAt: DateTime
  facebook: String
  linkedin: String
  twitter: String
  updatedAt: DateTime
}

input SocialMediaScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  facebook: String
  facebook_not: String
  facebook_in: [String!]
  facebook_not_in: [String!]
  facebook_lt: String
  facebook_lte: String
  facebook_gt: String
  facebook_gte: String
  facebook_contains: String
  facebook_not_contains: String
  facebook_starts_with: String
  facebook_not_starts_with: String
  facebook_ends_with: String
  facebook_not_ends_with: String
  linkedin: String
  linkedin_not: String
  linkedin_in: [String!]
  linkedin_not_in: [String!]
  linkedin_lt: String
  linkedin_lte: String
  linkedin_gt: String
  linkedin_gte: String
  linkedin_contains: String
  linkedin_not_contains: String
  linkedin_starts_with: String
  linkedin_not_starts_with: String
  linkedin_ends_with: String
  linkedin_not_ends_with: String
  twitter: String
  twitter_not: String
  twitter_in: [String!]
  twitter_not_in: [String!]
  twitter_lt: String
  twitter_lte: String
  twitter_gt: String
  twitter_gte: String
  twitter_contains: String
  twitter_not_contains: String
  twitter_starts_with: String
  twitter_not_starts_with: String
  twitter_ends_with: String
  twitter_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [SocialMediaScalarWhereInput!]
  OR: [SocialMediaScalarWhereInput!]
  NOT: [SocialMediaScalarWhereInput!]
}

type SocialMediaSubscriptionPayload {
  mutation: MutationType!
  node: SocialMedia
  updatedFields: [String!]
  previousValues: SocialMediaPreviousValues
}

input SocialMediaSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SocialMediaWhereInput
  AND: [SocialMediaSubscriptionWhereInput!]
  OR: [SocialMediaSubscriptionWhereInput!]
  NOT: [SocialMediaSubscriptionWhereInput!]
}

input SocialMediaUpdateInput {
  facebook: String
  linkedin: String
  provider: ProviderUpdateOneWithoutSocialMediaInput
  twitter: String
}

input SocialMediaUpdateManyDataInput {
  facebook: String
  linkedin: String
  twitter: String
}

input SocialMediaUpdateManyMutationInput {
  facebook: String
  linkedin: String
  twitter: String
}

input SocialMediaUpdateManyWithoutProviderInput {
  create: [SocialMediaCreateWithoutProviderInput!]
  delete: [SocialMediaWhereUniqueInput!]
  connect: [SocialMediaWhereUniqueInput!]
  set: [SocialMediaWhereUniqueInput!]
  disconnect: [SocialMediaWhereUniqueInput!]
  update: [SocialMediaUpdateWithWhereUniqueWithoutProviderInput!]
  upsert: [SocialMediaUpsertWithWhereUniqueWithoutProviderInput!]
  deleteMany: [SocialMediaScalarWhereInput!]
  updateMany: [SocialMediaUpdateManyWithWhereNestedInput!]
}

input SocialMediaUpdateManyWithWhereNestedInput {
  where: SocialMediaScalarWhereInput!
  data: SocialMediaUpdateManyDataInput!
}

input SocialMediaUpdateWithoutProviderDataInput {
  facebook: String
  linkedin: String
  twitter: String
}

input SocialMediaUpdateWithWhereUniqueWithoutProviderInput {
  where: SocialMediaWhereUniqueInput!
  data: SocialMediaUpdateWithoutProviderDataInput!
}

input SocialMediaUpsertWithWhereUniqueWithoutProviderInput {
  where: SocialMediaWhereUniqueInput!
  update: SocialMediaUpdateWithoutProviderDataInput!
  create: SocialMediaCreateWithoutProviderInput!
}

input SocialMediaWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  facebook: String
  facebook_not: String
  facebook_in: [String!]
  facebook_not_in: [String!]
  facebook_lt: String
  facebook_lte: String
  facebook_gt: String
  facebook_gte: String
  facebook_contains: String
  facebook_not_contains: String
  facebook_starts_with: String
  facebook_not_starts_with: String
  facebook_ends_with: String
  facebook_not_ends_with: String
  linkedin: String
  linkedin_not: String
  linkedin_in: [String!]
  linkedin_not_in: [String!]
  linkedin_lt: String
  linkedin_lte: String
  linkedin_gt: String
  linkedin_gte: String
  linkedin_contains: String
  linkedin_not_contains: String
  linkedin_starts_with: String
  linkedin_not_starts_with: String
  linkedin_ends_with: String
  linkedin_not_ends_with: String
  provider: ProviderWhereInput
  twitter: String
  twitter_not: String
  twitter_in: [String!]
  twitter_not_in: [String!]
  twitter_lt: String
  twitter_lte: String
  twitter_gt: String
  twitter_gte: String
  twitter_contains: String
  twitter_not_contains: String
  twitter_starts_with: String
  twitter_not_starts_with: String
  twitter_ends_with: String
  twitter_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [SocialMediaWhereInput!]
  OR: [SocialMediaWhereInput!]
  NOT: [SocialMediaWhereInput!]
}

input SocialMediaWhereUniqueInput {
  id: Int
}

type SubCategory {
  id: Int!
  category(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category!]
  name: String!
  photo: String
}

type SubCategoryConnection {
  pageInfo: PageInfo!
  edges: [SubCategoryEdge]!
  aggregate: AggregateSubCategory!
}

input SubCategoryCreateInput {
  category: CategoryCreateManyWithoutSubcategoryInput
  name: String!
  photo: String
}

input SubCategoryCreateOneWithoutCategoryInput {
  create: SubCategoryCreateWithoutCategoryInput
  connect: SubCategoryWhereUniqueInput
}

input SubCategoryCreateWithoutCategoryInput {
  name: String!
  photo: String
}

type SubCategoryEdge {
  node: SubCategory!
  cursor: String!
}

enum SubCategoryOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  photo_ASC
  photo_DESC
}

type SubCategoryPreviousValues {
  id: Int!
  name: String!
  photo: String
}

type SubCategorySubscriptionPayload {
  mutation: MutationType!
  node: SubCategory
  updatedFields: [String!]
  previousValues: SubCategoryPreviousValues
}

input SubCategorySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SubCategoryWhereInput
  AND: [SubCategorySubscriptionWhereInput!]
  OR: [SubCategorySubscriptionWhereInput!]
  NOT: [SubCategorySubscriptionWhereInput!]
}

input SubCategoryUpdateInput {
  category: CategoryUpdateManyWithoutSubcategoryInput
  name: String
  photo: String
}

input SubCategoryUpdateManyMutationInput {
  name: String
  photo: String
}

input SubCategoryUpdateOneWithoutCategoryInput {
  create: SubCategoryCreateWithoutCategoryInput
  update: SubCategoryUpdateWithoutCategoryDataInput
  upsert: SubCategoryUpsertWithoutCategoryInput
  delete: Boolean
  disconnect: Boolean
  connect: SubCategoryWhereUniqueInput
}

input SubCategoryUpdateWithoutCategoryDataInput {
  name: String
  photo: String
}

input SubCategoryUpsertWithoutCategoryInput {
  update: SubCategoryUpdateWithoutCategoryDataInput!
  create: SubCategoryCreateWithoutCategoryInput!
}

input SubCategoryWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  category_every: CategoryWhereInput
  category_some: CategoryWhereInput
  category_none: CategoryWhereInput
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  photo: String
  photo_not: String
  photo_in: [String!]
  photo_not_in: [String!]
  photo_lt: String
  photo_lte: String
  photo_gt: String
  photo_gte: String
  photo_contains: String
  photo_not_contains: String
  photo_starts_with: String
  photo_not_starts_with: String
  photo_ends_with: String
  photo_not_ends_with: String
  AND: [SubCategoryWhereInput!]
  OR: [SubCategoryWhereInput!]
  NOT: [SubCategoryWhereInput!]
}

input SubCategoryWhereUniqueInput {
  id: Int
}

type Subscription {
  category(where: CategorySubscriptionWhereInput): CategorySubscriptionPayload
  contract(where: ContractSubscriptionWhereInput): ContractSubscriptionPayload
  customer(where: CustomerSubscriptionWhereInput): CustomerSubscriptionPayload
  newsletter(where: NewsletterSubscriptionWhereInput): NewsletterSubscriptionPayload
  priceCategory(where: PriceCategorySubscriptionWhereInput): PriceCategorySubscriptionPayload
  provider(where: ProviderSubscriptionWhereInput): ProviderSubscriptionPayload
  review(where: ReviewSubscriptionWhereInput): ReviewSubscriptionPayload
  socialMedia(where: SocialMediaSubscriptionWhereInput): SocialMediaSubscriptionPayload
  subCategory(where: SubCategorySubscriptionWhereInput): SubCategorySubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User {
  id: Int!
  allowedToConnect: Boolean
  changedPwd: String
  createdAt: DateTime
  email: String!
  givenName: String!
  lang: String
  lastlogin: DateTime
  name: String!
  numberlogin: Int!
  provider(where: ProviderWhereInput, orderBy: ProviderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Provider!]
  tempPwd: String
  updatedAt: DateTime
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  allowedToConnect: Boolean
  changedPwd: String
  email: String!
  givenName: String!
  lang: String
  lastlogin: DateTime
  name: String!
  numberlogin: Int!
  provider: ProviderCreateManyWithoutUserInput
  tempPwd: String
}

input UserCreateManyWithoutProviderInput {
  create: [UserCreateWithoutProviderInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateWithoutProviderInput {
  allowedToConnect: Boolean
  changedPwd: String
  email: String!
  givenName: String!
  lang: String
  lastlogin: DateTime
  name: String!
  numberlogin: Int!
  tempPwd: String
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  allowedToConnect_ASC
  allowedToConnect_DESC
  changedPwd_ASC
  changedPwd_DESC
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  givenName_ASC
  givenName_DESC
  lang_ASC
  lang_DESC
  lastlogin_ASC
  lastlogin_DESC
  name_ASC
  name_DESC
  numberlogin_ASC
  numberlogin_DESC
  tempPwd_ASC
  tempPwd_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserPreviousValues {
  id: Int!
  allowedToConnect: Boolean
  changedPwd: String
  createdAt: DateTime
  email: String!
  givenName: String!
  lang: String
  lastlogin: DateTime
  name: String!
  numberlogin: Int!
  tempPwd: String
  updatedAt: DateTime
}

input UserScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  allowedToConnect: Boolean
  allowedToConnect_not: Boolean
  changedPwd: String
  changedPwd_not: String
  changedPwd_in: [String!]
  changedPwd_not_in: [String!]
  changedPwd_lt: String
  changedPwd_lte: String
  changedPwd_gt: String
  changedPwd_gte: String
  changedPwd_contains: String
  changedPwd_not_contains: String
  changedPwd_starts_with: String
  changedPwd_not_starts_with: String
  changedPwd_ends_with: String
  changedPwd_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  givenName: String
  givenName_not: String
  givenName_in: [String!]
  givenName_not_in: [String!]
  givenName_lt: String
  givenName_lte: String
  givenName_gt: String
  givenName_gte: String
  givenName_contains: String
  givenName_not_contains: String
  givenName_starts_with: String
  givenName_not_starts_with: String
  givenName_ends_with: String
  givenName_not_ends_with: String
  lang: String
  lang_not: String
  lang_in: [String!]
  lang_not_in: [String!]
  lang_lt: String
  lang_lte: String
  lang_gt: String
  lang_gte: String
  lang_contains: String
  lang_not_contains: String
  lang_starts_with: String
  lang_not_starts_with: String
  lang_ends_with: String
  lang_not_ends_with: String
  lastlogin: DateTime
  lastlogin_not: DateTime
  lastlogin_in: [DateTime!]
  lastlogin_not_in: [DateTime!]
  lastlogin_lt: DateTime
  lastlogin_lte: DateTime
  lastlogin_gt: DateTime
  lastlogin_gte: DateTime
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  numberlogin: Int
  numberlogin_not: Int
  numberlogin_in: [Int!]
  numberlogin_not_in: [Int!]
  numberlogin_lt: Int
  numberlogin_lte: Int
  numberlogin_gt: Int
  numberlogin_gte: Int
  tempPwd: String
  tempPwd_not: String
  tempPwd_in: [String!]
  tempPwd_not_in: [String!]
  tempPwd_lt: String
  tempPwd_lte: String
  tempPwd_gt: String
  tempPwd_gte: String
  tempPwd_contains: String
  tempPwd_not_contains: String
  tempPwd_starts_with: String
  tempPwd_not_starts_with: String
  tempPwd_ends_with: String
  tempPwd_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  NOT: [UserScalarWhereInput!]
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  allowedToConnect: Boolean
  changedPwd: String
  email: String
  givenName: String
  lang: String
  lastlogin: DateTime
  name: String
  numberlogin: Int
  provider: ProviderUpdateManyWithoutUserInput
  tempPwd: String
}

input UserUpdateManyDataInput {
  allowedToConnect: Boolean
  changedPwd: String
  email: String
  givenName: String
  lang: String
  lastlogin: DateTime
  name: String
  numberlogin: Int
  tempPwd: String
}

input UserUpdateManyMutationInput {
  allowedToConnect: Boolean
  changedPwd: String
  email: String
  givenName: String
  lang: String
  lastlogin: DateTime
  name: String
  numberlogin: Int
  tempPwd: String
}

input UserUpdateManyWithoutProviderInput {
  create: [UserCreateWithoutProviderInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutProviderInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutProviderInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithWhereNestedInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyDataInput!
}

input UserUpdateWithoutProviderDataInput {
  allowedToConnect: Boolean
  changedPwd: String
  email: String
  givenName: String
  lang: String
  lastlogin: DateTime
  name: String
  numberlogin: Int
  tempPwd: String
}

input UserUpdateWithWhereUniqueWithoutProviderInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutProviderDataInput!
}

input UserUpsertWithWhereUniqueWithoutProviderInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutProviderDataInput!
  create: UserCreateWithoutProviderInput!
}

input UserWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  allowedToConnect: Boolean
  allowedToConnect_not: Boolean
  changedPwd: String
  changedPwd_not: String
  changedPwd_in: [String!]
  changedPwd_not_in: [String!]
  changedPwd_lt: String
  changedPwd_lte: String
  changedPwd_gt: String
  changedPwd_gte: String
  changedPwd_contains: String
  changedPwd_not_contains: String
  changedPwd_starts_with: String
  changedPwd_not_starts_with: String
  changedPwd_ends_with: String
  changedPwd_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  givenName: String
  givenName_not: String
  givenName_in: [String!]
  givenName_not_in: [String!]
  givenName_lt: String
  givenName_lte: String
  givenName_gt: String
  givenName_gte: String
  givenName_contains: String
  givenName_not_contains: String
  givenName_starts_with: String
  givenName_not_starts_with: String
  givenName_ends_with: String
  givenName_not_ends_with: String
  lang: String
  lang_not: String
  lang_in: [String!]
  lang_not_in: [String!]
  lang_lt: String
  lang_lte: String
  lang_gt: String
  lang_gte: String
  lang_contains: String
  lang_not_contains: String
  lang_starts_with: String
  lang_not_starts_with: String
  lang_ends_with: String
  lang_not_ends_with: String
  lastlogin: DateTime
  lastlogin_not: DateTime
  lastlogin_in: [DateTime!]
  lastlogin_not_in: [DateTime!]
  lastlogin_lt: DateTime
  lastlogin_lte: DateTime
  lastlogin_gt: DateTime
  lastlogin_gte: DateTime
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  numberlogin: Int
  numberlogin_not: Int
  numberlogin_in: [Int!]
  numberlogin_not_in: [Int!]
  numberlogin_lt: Int
  numberlogin_lte: Int
  numberlogin_gt: Int
  numberlogin_gte: Int
  provider_every: ProviderWhereInput
  provider_some: ProviderWhereInput
  provider_none: ProviderWhereInput
  tempPwd: String
  tempPwd_not: String
  tempPwd_in: [String!]
  tempPwd_not_in: [String!]
  tempPwd_lt: String
  tempPwd_lte: String
  tempPwd_gt: String
  tempPwd_gte: String
  tempPwd_contains: String
  tempPwd_not_contains: String
  tempPwd_starts_with: String
  tempPwd_not_starts_with: String
  tempPwd_ends_with: String
  tempPwd_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: Int
}
`
      }
    